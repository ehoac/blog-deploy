{"meta":{"title":"Ehoac の Blog","subtitle":"日常记录","description":"路漫漫其修远兮，吾将上下而求索。","author":"ehoac","url":"https://me.ehoac.cn:10443","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-12-07T02:15:44.259Z","updated":"2022-12-07T02:15:44.259Z","comments":false,"path":"/404.html","permalink":"https://me.ehoac.cn:10443/404.html","excerpt":"","text":""},{"title":"书单","date":"2022-12-07T02:15:44.262Z","updated":"2022-12-07T02:15:44.262Z","comments":false,"path":"books/index.html","permalink":"https://me.ehoac.cn:10443/books/index.html","excerpt":"","text":""},{"title":"about","date":"2022-12-07T02:15:44.261Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"about/index.html","permalink":"https://me.ehoac.cn:10443/about/index.html","excerpt":"","text":"Ehoac ehoac@sina.com 普通人 我常常自问自己是什么样的人，却总说不出；有时觉得在历史长河中，个人实在不算什么；有时又觉得，自己是独特而唯一的。其实，我也只是万千大众中的一个而已，没有什么特别的；是一个为了生活而奔波劳碌的人，是一个贪图安逸的人，是一个没什么追求的人，也是想实现自己价值人人，想追求真理的人，想好好活一次的人。"},{"title":"categories","date":"2022-12-07T02:15:44.262Z","updated":"2022-12-07T02:15:44.262Z","comments":false,"path":"categories/index.html","permalink":"https://me.ehoac.cn:10443/categories/index.html","excerpt":"","text":""},{"title":"frends","date":"2022-12-07T02:15:44.262Z","updated":"2022-12-07T02:15:44.262Z","comments":true,"path":"friends/index.html","permalink":"https://me.ehoac.cn:10443/friends/index.html","excerpt":"","text":""},{"title":"links","date":"2022-12-07T02:15:44.312Z","updated":"2022-12-07T02:15:44.312Z","comments":true,"path":"links/index.html","permalink":"https://me.ehoac.cn:10443/links/index.html","excerpt":"","text":""},{"title":"more","date":"2022-12-07T02:15:44.312Z","updated":"2022-12-07T02:15:44.312Z","comments":true,"path":"more/index.html","permalink":"https://me.ehoac.cn:10443/more/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-12-07T02:15:44.312Z","updated":"2022-12-07T02:15:44.312Z","comments":false,"path":"repository/index.html","permalink":"https://me.ehoac.cn:10443/repository/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-12-07T02:15:44.312Z","updated":"2022-12-07T02:15:44.312Z","comments":false,"path":"tags/index.html","permalink":"https://me.ehoac.cn:10443/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vscode配置git-bash","slug":"vscode-config-git-bash","date":"2022-02-07T15:41:14.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2022/02/07/vscode-config-git-bash/","link":"","permalink":"https://me.ehoac.cn:10443/2022/02/07/vscode-config-git-bash/","excerpt":"","text":"旧版本 123&#123; &quot;terminal.integrated.shell.windows&quot;: &quot;C:\\\\soft\\\\Git\\\\bin\\\\bash.exe&quot;,&#125; 新版本 12345678&#123; &quot;terminal.integrated.defaultProfile.windows&quot;: &quot;Git-Bash&quot;, &quot;terminal.integrated.profiles.windows&quot;: &#123; &quot;Git-Bash&quot;: &#123; &quot;path&quot;: &quot;C:\\\\soft\\\\Git\\\\bin\\\\bash.exe&quot;, &#125; &#125;,&#125; 问题 新建终端为弹出窗口 设置终端路径问题，应该是C:\\\\soft\\\\Git\\\\bin\\\\bash.exe，设置成了C:\\\\soft\\\\Git\\\\git-bash.exe","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://me.ehoac.cn:10443/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"idea快捷方式记录","slug":"idea-shotcuts","date":"2021-12-13T02:34:03.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2021/12/13/idea-shotcuts/","link":"","permalink":"https://me.ehoac.cn:10443/2021/12/13/idea-shotcuts/","excerpt":"","text":"窗口操作 ALT+左右方向：切换当前已打开的窗口中的子视图 ALT+数字键：显示对应数值的选项卡 1：Project 2：Favorites 3：Find 5：Debug 6：TODO 编辑操作 ALT+上下方向：光标跳转到当前文件的前后方法名 Alt + F7：查找光标所在的方法 / 变量 / 类被调用的地方 Alt + ~：显示版本控制常用操作菜单弹出层 Alt + F3： 选中文本，逐个往下查找相同文本，并高亮显示 Ctrl + Alt + T：对选中的代码弹出环绕选项弹出层 Ctrl + Alt + J：弹出模板选择窗口，将选定的代码加入动态模板中 Ctrl + Alt + B： 在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口 Ctrl + Alt + V：快速引进变量 Ctrl + Shift + J：自动将下一行合并到当前行末尾 Ctrl + Shift + W：递进式选择代码块 Ctrl + Alt + Enter：光标所在行上空出一行，光标定位到新行 Ctrl + Shift + C：复制当前文件磁盘路径到剪贴板 Ctrl + Shift + I：快速查看光标所在的方法 或 类的定义 Ctrl + Shift + [：选中从光标所在位置到它的顶部大括号位置 Ctrl + Shift + ]：选中从光标所在位置到它的底部大括号位置 Shift + 左键单击：在打开的文件名上按此快捷键，可以关闭当前打开文件 Shift + 滚轮：当前文件的横向滚动轴滚动 Ctrl + 左方向键：光标跳转到当前单词 / 中文句的左侧开头位置 Ctrl + 右方向键：光标跳转到当前单词 / 中文句的右侧开头位置 Ctrl + 前方向键：等效于鼠标滚轮向前效果 Ctrl + 后方向键：等效于鼠标滚轮向后效果 Ctrl + Delete: 删除光标后面的单词或是中文句 Ctrl + BackSpace: 删除光标前面的单词或是中文句 Ctrl + Space：基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl +逗号 Alt + Q：弹出一个提示，显示当前类的声明 / 上下文信息 调试 ALT+F8：Debug 状态下，选中对象，弹出调试框 Ctrl + Shift + T：对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择 Shift + F11：弹出书签显示层","categories":[],"tags":[{"name":"IDE","slug":"IDE","permalink":"https://me.ehoac.cn:10443/tags/IDE/"},{"name":"IDEA","slug":"IDEA","permalink":"https://me.ehoac.cn:10443/tags/IDEA/"}]},{"title":"docker使用记录","slug":"docker-usage","date":"2021-11-22T05:58:51.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2021/11/22/docker-usage/","link":"","permalink":"https://me.ehoac.cn:10443/2021/11/22/docker-usage/","excerpt":"","text":"基本信息 一句话介绍：基于GO语言的开源的应用容器引擎 可以做什么：打包应用以及依赖包到一个轻量级、可移植的容器中，发布到任何流行的 Linux 机器上 组织构成 镜像（Image）：一个 root 文件系统 容器（Container）：代码控制中心，用来保存镜像镜像运行时的实体 仓库（Repository）：代码控制中心，用来保存镜像 如何拥有 linux 123curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun# 或curl -sSL https://get.daocloud.io/docker | sh 可能遇到的问题 docker image is being used by stopped container 原因：要删除的镜像被某个容器所引用 解决：先删除引用了镜像的容器，再删除镜像","categories":[],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"个人数据字典","slug":"个人数据字典","date":"2021-02-07T05:18:57.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2021/02/07/个人数据字典/","link":"","permalink":"https://me.ehoac.cn:10443/2021/02/07/%E4%B8%AA%E4%BA%BA%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8/","excerpt":"","text":"色卡 tb_color_card 字段 类型 含义 备注 uid uuid 主键 name varchar(200) 名称 colors varchar(500) 颜色组合 多个以英文逗号分隔 describe varchar(1000) 描述 pics varchar(2000) 图片 uuid 或路径，多个以英文逗号分隔 role_id char(2) 角色 123456789create table tb_color_card( uid uuid not null default gen_random_uuid(), name varchar(200), colors varchar(500), describe varchar(1000), pics varchar(2000), role_id char(2), constraint tb_color_card_pkey primary key (uid)); 账单 tb_bill 字段 类型 含义 备注 uid uuid 主键 type char(2) 类型 0:支出，1:收入 money numeric(12,2) 金额 real_money numeric(12,2) 实付 user_id uuid 用户标识 12345678create table tb_bill( uid uuid not null default gen_random_uuid(), type char(2), money numeric(12,2), real_money numeric(12,2), user_id uuid, constraint tb_bill_pkey primary key (uid)); 代码表 code_bill_type 字段 类型 含义 备注 code char(2) 代码，主键 name varchar(50) 名称 describe varchar(600) 描述 sign bool 是否启用 True:启用，False:不启用 1234567create table code_bill_type( code char(2) not null, name varchar(50), describe varchar(600), sign boolean not null, constraint code_bill_type_pkey primary key(code))","categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"Hexo 博客搭建记录","slug":"博客搭建记录","date":"2021-01-15T12:40:51.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2021/01/15/博客搭建记录/","link":"","permalink":"https://me.ehoac.cn:10443/2021/01/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/","excerpt":"安装 node 使用 nvm 安装 Node 12345# 安装 node v14.15.4nvm install 14.15.4# 使用 node v14.15.4nvm use 14.15.4 修改 nvm 使用镜像 123# nvm安装目录中settings.txt中增加nvm node_mirror https://npm.taobao.org/mirrors/node/nvm npm_mirror https://npm.taobao.org/mirrors/npm/","text":"安装 node 使用 nvm 安装 Node 12345# 安装 node v14.15.4nvm install 14.15.4# 使用 node v14.15.4nvm use 14.15.4 修改 nvm 使用镜像 123# nvm安装目录中settings.txt中增加nvm node_mirror https://npm.taobao.org/mirrors/node/nvm npm_mirror https://npm.taobao.org/mirrors/npm/ 安装 Hexo 1npm install -g hexo-cli 建立博客 1234# 进入要放置博客的目录hexo init &lt;folder&gt;cd &lt;folder&gt;npm install Hexo 配置文件 _config.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Ehoac の Blogsubtitle: &quot;日常记录&quot;description: &quot;路漫漫其修远兮，吾将上下而求索。&quot;keywords:author: ehoaclanguage: - zh - zh-CN - entimezone: &quot;Asia/Shanghai&quot;# URL## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;url: http://XXX.comroot: /permalink: :year-:month-:day/:hash.htmlpermalink_defaults:pretty_urls: trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: enable: true # Open external links in new tab field: site # Apply to the whole site exclude: &quot;&quot;filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: &quot;&quot; wrap: true hljs: falseprismjs: enable: false preprocess: true line_number: true tab_replace: &quot;&quot;# Home page setting# path: Root path for your blogs index page. (default = &#x27;&#x27;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &quot;&quot; per_page: 10 order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Metadata elements## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/metameta_generator: true# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;updated_option: &quot;mtime&quot;# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# 主题theme: icarus# 部署到git服务deploy: type: &quot;git&quot; repo: git@XXX.com:/path/to/server/blog.git branch: master Hexo 主题 hexo-theme-icarus 12npm install hexo-theme-icarushexo config theme icarus icarus 主题配置 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387# Version of the configuration fileversion: 4.0.0# Icarus theme variant, can be &quot;default&quot; or &quot;cyberpunk&quot;variant: default# Path or URL to the website&#x27;s logologo: /img/logo.svg# Page metadata configurationshead: # URL or path to the website&#x27;s icon favicon: /img/favicon.svg # Web application manifests configuration # https://developer.mozilla.org/en-US/docs/Web/Manifest manifest: # Name of the web application (default to the site title) name: Ehoac の Blog # The displayed name of the web application # when there is not enough space to display full name short_name: Ehoac # The start URL of the web application start_url: # The default theme color for the application theme_color: # A placeholder background color for the application page to display # before its stylesheet is loaded background_color: # The preferred display mode for the website display: standalone # Image files that can serve as application icons for different contexts icons: - # The path to the image file src: &quot;&quot; # A string containing space-separated image dimensions sizes: &quot;&quot; # A hint as to the media type of the image type: # Open Graph metadata # https://hexo.io/docs/helpers.html#open-graph open_graph: # Page title (og:title) (optional) # You should leave this blank for most of the time title: # Page type (og:type) (optional) # You should leave this blank for most of the time type: blog # Page URL (og:url) (optional) # You should leave this blank for most of the time url: # Page cover (og:image) (optional) # You should leave this blank for most of the time image: # Site name (og:site_name) (optional) # You should leave this blank for most of the time site_name: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page description (og:description) (optional) # You should leave this blank for most of the time description: # Twitter card type (twitter:card) twitter_card: # Twitter ID (twitter:creator) twitter_id: # Twitter Site (twitter:site) twitter_site: # Google+ profile link (deprecated) google_plus: # Facebook admin ID fb_admins: # Facebook App ID fb_app_id: # Structured data of the page # https://developers.google.com/search/docs/guides/intro-structured-data structured_data: # Page title (optional) # You should leave this blank for most of the time title: # Page description (optional) # You should leave this blank for most of the time description: # Page URL (optional) # You should leave this blank for most of the time url: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page images (optional) # You should leave this blank for most of the time image: # Additional HTML meta tags in an array meta: # Meta tag specified in &lt;attribute&gt;=&lt;value&gt; style # E.g., name=theme-color;content=#123456 =&gt; &lt;meta name=&quot;theme-color&quot; content=&quot;#123456&quot;&gt; - &quot;&quot; # URL or path to the website&#x27;s RSS atom.xml rss:# Page top navigation bar configurationsnavbar: # Navigation menu items menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 关于: /about # Links to be shown on the right of the navigation bar # links: # Download on GitHub: # icon: fab fa-github # url: &quot;https://github.com/ppoffice/hexo-theme-icarus&quot;# Page footer configurationsfooter: # Links to be shown on the right of the footer section # links: # Creative Commons: # icon: fab fa-creative-commons # url: &quot;https://creativecommons.org/&quot; # Attribution 4.0 International: # icon: fab fa-creative-commons-by # url: &quot;https://creativecommons.org/licenses/by/4.0/&quot; # Download on GitHub: # icon: fab fa-github # url: &quot;https://github.com/ppoffice/hexo-theme-icarus&quot;# Article related configurationsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # Show copy code button clipboard: true # Default folding status of the code blocks. Can be &quot;&quot;, &quot;folded&quot;, &quot;unfolded&quot; fold: unfolded # Whether to show estimated article reading time readtime: true # Article licensing block # licenses: # Creative Commons: # icon: fab fa-creative-commons # url: &quot;https://creativecommons.org/&quot; # Attribution: # icon: fab fa-creative-commons-by # url: &quot;https://creativecommons.org/licenses/by/4.0/&quot; # Noncommercial: # icon: fab fa-creative-commons-nc # url: &quot;https://creativecommons.org/licenses/by-nc/4.0/&quot;# Search plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search/search: type: insight# Comment plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment/comment: type: isso url: comments.example.com # type: gitalk # client_id: 5517d968e8bd89976cdb # client_secret: eb3f07f7e26e18c0ca3924193d1761346084147f # repo: https://github.com/ehoac/ehoac_hexo_comment.git # owner: ehoac # admin: # - ehoac # language: zh-CN # per_page: 20# Donate plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Donation/donates: # &quot;Afdian.net&quot; donate button configurations # - type: afdian # # URL to the &quot;Afdian.net&quot; personal page # url: &quot;&quot; # Alipay donate button configurations - type: alipay # Alipay qrcode image URL qrcode: &quot;&quot; # &quot;Buy me a coffee&quot; donate button configurations # - type: buymeacoffee # # URL to the &quot;Buy me a coffee&quot; page # url: &quot;&quot; # Patreon donate button configurations # - type: patreon # # URL to the Patreon page # url: &quot;&quot; # Paypal donate button configurations # - type: paypal # # Paypal business ID or email address # business: &quot;&quot; # # Currency code # currency_code: USD # Wechat donate button configurations - type: wechat # Wechat qrcode image URL qrcode: &quot;&quot;# Share plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share/# share:# type: sharethis# # URL to the ShareThis share plugin script# install_url: &quot;&quot;# Sidebar configurations.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # Left sidebar configurations left: # Whether the sidebar sticks to the top when page scrolls sticky: false # Right sidebar configurations right: # Whether the sidebar sticks to the top when page scrolls sticky: false# Sidebar widget configurations# http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: # Profile widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: profile # Author name author: Ehoac # Author title author_title: Your title # Author&#x27;s current location # location: Your location # URL or path to the avatar image avatar: # Whether show the rounded avatar image avatar_rounded: false # Email address for the Gravatar # gravatar: # URL or path for the follow button # follow_link: &quot;https://github.com/ppoffice&quot; # Links to be shown on the bottom of the profile widget # social_links: # Github: # icon: fab fa-github # url: &quot;https://github.com/ppoffice&quot; # Facebook: # icon: fab fa-facebook # url: &quot;https://facebook.com&quot; # Twitter: # icon: fab fa-twitter # url: &quot;https://twitter.com&quot; # Dribbble: # icon: fab fa-dribbble # url: &quot;https://dribbble.com&quot; # RSS: # icon: fas fa-rss # url: / # Table of contents widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: toc # Whether to show the index of each heading index: true # Whether to collapse sub-headings when they are out-of-view collapsed: true # Maximum level of headings to show (1-6) depth: 3 # Recommendation links widget configurations # - # Where should the widget be placed, left sidebar or right sidebar # position: left # type: links # # Names and URLs of the sites # links: # Hexo: &quot;https://hexo.io&quot; # Bulma: &quot;https://bulma.io&quot; # Categories widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: categories # Recent posts widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: recent_posts # Archives widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: archives # Tags widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: tags # Google FeedBurner email subscription widget configurations # - # Where should the widget be placed, left sidebar or right sidebar # position: left # type: subscribe_email # # Hint text under the email input # description: # # Feedburner ID # feedburner_id: &quot;&quot; # Google AdSense unit configurations # - # Where should the widget be placed, left sidebar or right sidebar # position: left # type: adsense # # AdSense client ID # client_id: &quot;&quot; # # AdSense AD unit ID # slot_id: &quot;&quot;# Plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/plugins: # Enable page startup animations animejs: true # Show the &quot;back to top&quot; button back_to_top: true # Baidu Analytics plugin settings # https://tongji.baidu.com baidu_analytics: # Baidu Analytics tracking ID tracking_id: # Bing Webmaster Tools plugin settings # https://www.bing.com/toolbox/webmaster/ bing_webmaster: # Bing Webmaster Tools tracking ID in the &lt;meta&gt; tag tracking_id: # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: enable: true site_uv_offset: 0 site_pv_offset: 0 # CNZZ statistics # https://www.umeng.com/web cnzz: # CNZZ tracker id id: # CNZZ website id web_id: # Alerting users about the use of cookies # https://www.osano.com/cookieconsent/ cookie_consent: # The compliance type. Can be &quot;info&quot;, &quot;opt-in&quot;, or &quot;opt-out&quot; type: info # Theme of the popup. Can be &quot;block&quot;, &quot;edgeless&quot;, or &quot;classic&quot; theme: edgeless # Whether the popup should stay static regardless of the page scrolls static: false # Where on the screen the consent popup should display position: bottom-left # URL to your site&#x27;s cookie policy policyLink: &quot;https://www.cookiesandyou.com/&quot; # Enable the lightGallery and Justified Gallery plugins gallery: true # Google Analytics plugin settings # https://analytics.google.com google_analytics: # Google Analytics tracking ID tracking_id: # Hotjar user feedback plugin # https://www.hotjar.com/ hotjar: # Hotjar site id site_id: # Enable the KaTeX math typesetting support # https://katex.org/ katex: false # Enable the MathJax math typesetting support # https://www.mathjax.org/ mathjax: false # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated_browser: false # Show a progress bar at top of the page on page loading progressbar: true # Statcounter statistics # https://statcounter.com/ statcounter: # Statcounter project id project: # Statcounter project security code security: # Twitter conversion tracking plugin settings # https://business.twitter.com/en/help/campaign-measurement-and-analytics/conversion-tracking-for-websites.html twitter_conversion_tracking: # Twitter Pixel ID pixel_id:# CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL template of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL template of the webfont CDN provider fontcdn: google # Name or URL of the fontawesome icon font CDN provider iconcdn: fontawesome isso 评论系统 使用 python2 安装 isso 模块，python3 配置 123456789101112# python 安装 isso 模块pip install isso# clone isso 项目git clone https://github.com/posativ/isso.gitcd isso# 安装依赖python setup.py develop# 安装js并压缩make init js# 启动 issoisso run# 使用supervisor建立守护进程 isso 项目配置 默认配置文件相对位置（/isso/share/isso.conf） 1234567891011121314151617181920[general]dbpath = /www/server/isso/db/comments.dbname =# 博客地址host = http://blog.XXX.com/ http://localhost/# 后台管理[admin]enabled = true# Admin access passwordpassword = admin_access_password[server]# 评论系统内网地址listen = http://0.0.0.0:8081# 评论系统外网地址public-endpoint = http://comments.example.com icarus 配置 _config.icarus.yml 123comment: type: isso url: comments.example.com 评论系统配置参考 icarus 配置中 comments 使用 git 部署 123456789101112131415161718192021222324252627282930# 创建git用户并登录useradd gitsu git# 设置git用户密码passwd git# 如果/home下没有git目录，创建一个mkdir /home/git#在git用户目录下创建密钥认证cd /home/gitmkdir .sshcd .sshtouch authorized_keys# 初始化一个裸仓库mkdir /home/git/repocd /home/git/repogit init --bare blog.gitcd blog.git/hooks# 编辑post-receive加入 work-tree 为 博客项目目录，推送时会将推送内容同步到博客目录# #!/bin/sh# git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f## 赋予post-receive执行权限chmod +x post-receivechown -R git:git /home/git/repo/blog.git# 客户端生成并配置ssh-keyssh-keygen -t rsa -C &quot;youremail@example.com&quot;# 将公钥复制到 服务器/home/git/.ssh/authorized_keys hexo 部署 配置 _config.yml 12345# 部署到git服务deploy: type: &quot;git&quot; repo: git@XXX.com:/path/to/server/blog.git branch: master 部署 1hexo d","categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"编程基础知识","slug":"code-base","date":"2020-11-06T01:42:05.000Z","updated":"2023-08-24T00:56:04.819Z","comments":true,"path":"2020/11/06/code-base/","link":"","permalink":"https://me.ehoac.cn:10443/2020/11/06/code-base/","excerpt":"位运算 如果两个不同长度的数据进行位运算时，系统会将二者按右端对齐，然后进行位运算。 与运算（&amp;） 运算规则：0&amp;0=0; 0&amp;1=0; 1&amp;0=0; 1&amp;1=1; 用途： 清零。如果想将一个单元清零，即使其全部二进制位为 0，只要与一个各位都为零的数值相与，结果为零。 取一个数中指定位(方法：找一个数，对应 X 要取的位，该数的对应位为 1，其余位为零，此数与 X 进行“与运算”可以得到 X 中的指定位。) 12X=10101110取X的低4位，用 X &amp; 0000 1111 = 00001110 即可得到 注：负数按补码形式参加按位与运算。","text":"位运算 如果两个不同长度的数据进行位运算时，系统会将二者按右端对齐，然后进行位运算。 与运算（&amp;） 运算规则：0&amp;0=0; 0&amp;1=0; 1&amp;0=0; 1&amp;1=1; 用途： 清零。如果想将一个单元清零，即使其全部二进制位为 0，只要与一个各位都为零的数值相与，结果为零。 取一个数中指定位(方法：找一个数，对应 X 要取的位，该数的对应位为 1，其余位为零，此数与 X 进行“与运算”可以得到 X 中的指定位。) 12X=10101110取X的低4位，用 X &amp; 0000 1111 = 00001110 即可得到 注：负数按补码形式参加按位与运算。 或运算（|） 运算规则：0|0=0; 0|1=1; 1|0=1; 1|1=1； 用途： 用来对一个数据的某些位置 1（找到一个数，对应 X 要置 1 的位，该数的对应位为 1，其余位为零。此数与 X 相或可使 X 中的某些位置 1） 1将X=10100000的低4位置1 ，用X | 0000 1111 = 1010 1111即可得到 异或运算（^） 运算规则：0^0=0; 0^1=1; 1^0=1; 1^1=0; 用途： 使特定位翻转找一个数，对应 X 要翻转的各位，该数的对应位为 1，其余位为零，此数与 X 对应位异或即可。 1X=10101110，使X低4位翻转，用X ^0000 1111 = 1010 0001即可得到 与 0 相异或，保留原值 ，X ^ 00000000 = 1010 1110 取反运算（~） 运算规则：~1=0; ~0=1; 1使一个数的最低位为零，可以表示为：a&amp;~1 左移运算（&lt;&lt;) 将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补 0） 12a = a&lt;&lt;2将a的二进制位左移2位，右补0左移1位后a = a*2 注：若左移时舍弃的高位不包含 1，则每左移一位，相当于该数乘以 2。 右移运算（&gt;&gt;） 将一个数的各二进制位全部右移若干位，正数左补 0，负数左补 1，右边丢弃。 1a = a&gt;&gt;2 将a的二进制位右移2位 注：操作数每右移一位，相当于该数除以 2 X/2,左补 0 或 补 1 得看被移数是正还是负。","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"windows 使用笔记","slug":"windows-note","date":"2020-11-04T03:09:10.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2020/11/04/windows-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/11/04/windows-note/","excerpt":"KILL 指定端口 12netstat -aon|findstr &quot;8080&quot;taskkill /pid 4136 -t -f","text":"KILL 指定端口 12netstat -aon|findstr &quot;8080&quot;taskkill /pid 4136 -t -f","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://me.ehoac.cn:10443/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"windows","slug":"windows","permalink":"https://me.ehoac.cn:10443/tags/windows/"}]},{"title":"HTML标签与属性参考","slug":"html-refer","date":"2020-10-24T07:50:39.000Z","updated":"2023-05-30T02:21:43.429Z","comments":true,"path":"2020/10/24/html-refer/","link":"","permalink":"https://me.ehoac.cn:10443/2020/10/24/html-refer/","excerpt":"meta 元信息 元信息：指的是对信息进行描述的信息","text":"meta 元信息 元信息：指的是对信息进行描述的信息 name: generator: 向搜索引擎说明页面是使用哪种工具软件开发的 keywords: 向搜索引擎说明页面的关键词是什么，不同的词语使用英文逗号分开（也可使用其它标点符号分隔） description: 描述信息，向搜索引擎概括性的介绍网页的主要内容 author: 作者 copyright：版权 renderer：渲染内核 robots：文件的检索方式 all：文件被检索，且页面上的链接可以被查询 none：文件不被检索，且页面上的链接不可以被查询 index：文件被检索 fllow：且页面上的链接可以被查询 noindex：文件不被检索，且页面上的链接可以被查询(不让 robot/spider 登录) nofllow：文件不被检索，且页面上的链接可以被查询(不让 robot/spider 顺着此链接向下查询) http-equiv: content-type: 设置网页内容的编码形式 content-language: 用于说明网页所使用的语言 refresh: 用于定时让网页在指定时间内刷新或跳转到其它页面 expires: 设定网页的到期时间（GMT 时间格式） pragma: 设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从 Cache 中再调用 set-cookie: 设置 cookie 的过期时间，如果网页过期，存盘的 cookie 将被删除。（GMT 时间格式） pics-label: 进行网页的等级评定 windows-target: 告知网页在当前窗口中以独立页面显示，可以防止自己的网页被别人当作一个 frame 页调用，即防止被钓鱼 page-enter: 设定进入网页时的特殊效果（当前页面不能是 frame 页面） page-exit: 设定网页离开时的特殊效果（当前页面不能是 frame 页面） 1234&lt;meta name=&quot;robot&quot; content=&quot;all&quot; /&gt;&lt;meta http-equiv=&quot;Refresh&quot; content=&quot;n;url=http://192.168.15.8&quot; /&gt;&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot; /&gt;&lt;meta http-equiv=&quot;set-cookie&quot; content=&quot;Mon,12 May 2001 00:20:00 GMT&quot; /&gt; charset: 设置字符编码 1&lt;meta charset=&quot;utf-8&quot; /&gt; 常用标签 网页结构 html body head meta title css、js 引入 link：引入外部 css 文件 style：样式 script：引入外部 js 或定义 js 代码 常用布局标签 div：分隔 h1：标题 1 h2：标题 2 h3：标题 3 h4：标题 4 h5：标题 5 h6：标题 6 p：段落 ol：有序列表 ul：无序列表 li：列表项目 dl：自定义列表 dt：定义术语 dd：定义描述 hr：水平线 特殊功能标签 a：定义锚 img：定义图像 段落文本处理 span：范围 em：加重文本（重要） strong：加重文本（很重要） br：换行 b：加粗文本 i：斜体文本 表格类标签 table：表 caption：表格标题 thead：表格头部 tbody：表格主体 tfoot：表格脚 col：表格列 colgroup：数据列组 tr：行 td：表格数据单元 th：表头数据单元 表单类标签 form：形状 fieldset：域组 legend：图例 label：标签 input：文本区域 textarea：文本区域 select：可选择的列表 option：选项 optgroup：选项组 button：发送按钮 其它标签 address：地址 abbr：缩写词 acronym：取首字母的缩写词 big：大文本 blockquote：区块引用语 cite：引用（引文） code：源代码 dfn：定义条目 kbd：键盘文本 q：引用语 small：小文本 sub：上标文本 samp：示例 tt：打印机文本 u：下划线文本 var：变量","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"html","slug":"html","permalink":"https://me.ehoac.cn:10443/tags/html/"}]},{"title":"vue 笔记","slug":"vue-note","date":"2020-09-30T08:55:10.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2020/09/30/vue-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/09/30/vue-note/","excerpt":"vue-devtools chrome 123456789101112# clone 项目git clone https://github.com/vuejs/vue-devtools.git# 进入项目目录cd vue-devtools# 安装依赖npm install# 构建npm run build","text":"vue-devtools chrome 123456789101112# clone 项目git clone https://github.com/vuejs/vue-devtools.git# 进入项目目录cd vue-devtools# 安装依赖npm install# 构建npm run build chorme 浏览器输入地址“chrome://extensions/”进入扩展程序页面， 点击“加载已解压的扩展程序…”按钮， 选择 vue-devtools&gt;shells 下的 chrome 文件夹。","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"vue","slug":"vue","permalink":"https://me.ehoac.cn:10443/tags/vue/"}]},{"title":"tkinter 记录","slug":"tkinter-note","date":"2020-09-03T00:29:30.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2020/09/03/tkinter-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/09/03/tkinter-note/","excerpt":"Tk(窗口) title():设置标题 geometry(&quot;width x height+x+y):窗口位置 maxsize(width, height):拖拽可设置最大尺寸 minsize(width, height):拖拽可设置最小尺寸 configure(bg='color'):窗口颜色 resizable(True, False):固定宽度和高度 state('zoomed'):最大化 iconify():最小化 iconbitmap('xx.ico'): 窗口图标 winfo_screenwidth():屏幕宽度 winfo_screenheight():屏幕高度","text":"Tk(窗口) title():设置标题 geometry(&quot;width x height+x+y):窗口位置 maxsize(width, height):拖拽可设置最大尺寸 minsize(width, height):拖拽可设置最小尺寸 configure(bg='color'):窗口颜色 resizable(True, False):固定宽度和高度 state('zoomed'):最大化 iconify():最小化 iconbitmap('xx.ico'): 窗口图标 winfo_screenwidth():屏幕宽度 winfo_screenheight():屏幕高度 widget(控件、组件、部件) Button: Canvas: Checkbutton: Entry: Frame: Label: LabelFrame: ListBox: Menu: MenuButton: Message: OptionMenu: PanedWindow: RadioButton: Scale: Scrollbar: Spinbox: Text: Toplevel: tk in ttk Button: Checkbutton: Entry: Frame: Label: LabelFrame: MenuButton: Radiobutton: Scale: Scrollbar: PanedWindow: ttk new Combobox: Notebook: Progressbar: Separetor: Sizegrip: Treeview: widget 共同属性 Dimensions: 大小 height: width: Colors:颜色 fg 或 foreground: bg 或 background: Fonts:字形 family: Helvetica、Times 等 size: weight: bold、normal 等 slant: italic、roman 等 underline: True 或 False overstrike: True 或 False Anchor:锚 anchor: nesw Relief styles:属性边框;flat/groove/raised/ridge/solid/sunken Bitmaps:显示位图 Label(root, bitmap='hourglass'): error/hourglass/info/questhead/question/warning/gray12/gray25/gray50/gray75 Cursors:鼠标外形，常用：arrow/circle/mouse/hand1/left_tee/left_side/ll_angle 等 widget 共用方法 Configuration config(option=value):设置属性，可在程序执行时建立或更改属性 cget('option'):取得 option 参数 keys(): 获得所有当前 widget 的参数 Event Processing mainloop():让程序继续执行，同时进入等待与处理窗口事件 quit(): Python Shell 窗口结束，但所有窗口继续执行 update(): 更新窗口画面 Event callbacks bind(event, callback): 事件绑定 unbind(event): 解除绑定 Alarm handlers after(time,callback): 间隔指定时间后调用 callback()方法 Label(标签) Label(父对象, options, ...) 常用options参数 anchor: bg 或 backgroun: bitmap: 不与 image 参数共存，如果两者都有设置，bitmap 将不起作用 borderwidth 或 bd compound: 图像文字共存时，配置文字与图像的位置关系 Label(root, bitmap='hourglass', compound='left', text='Text') left: 图像在左 right: 图像在右 top: 图像在上 bottom: 图像在下 center: 图像覆盖在图像上方 cursor: fg 或 foreground: font: height: image: justify: 多行时设置最后一行对齐方式，left/center/right padx/pady:设置标签文字边界与标签区间的间距 relief: text: textvariable: underline: width: wraplength: 设置标签中文字在多少宽度后换行 Button(按钮) Label(父对象, options, ...) 常用options参数 borderwidth 或 bd:边界宽度默认是两个像素 bg 或 background:背景色彩 command:单击功能按钮时，执行的方法 cursor:鼠标移至按钮上时的形状 fg 或 foreground: 前景色彩 font: 字形 height:高，单位是字符高 highlightbackground:取得焦点是背景颜色 image:按钮上的图像 justify: 多行时设置最后一行对齐方式，left/center/right padx/pady:默认是 1，设置标签文字边界与标签区间的间距 relief:控制文字外框 state:默认为 NORMAL,设为 DISABLE 时灰阶显示，表示不可用 text:名称 undeline:设置第几个文字有下划线，从 0 开始算，默认-1 表示无下划线 width:宽，单位是字符宽 wraplength:限制每行文字数, 默认为 0，表示只有’\\n’都会换行 compound: 图像文字共存时，配置文字与图像的位置关系 Lambda方法 通过 Labmda 表达式调用相同方法，但传递不同参数 12Button(root, text=&#x27;Text&#x27;, command=lambda:bColor(&#x27;blue&#x27;)) Entry(文本框) Entry(父对象, options, ...) 常用options参数 borderwidth 或 bd:边界宽度默认是两个像素 bg 或 background:背景色彩 command:单击功能按钮时，执行的方法 cursor:鼠标移至按钮上时的形状 exportselection:如果执行选取时，所选取的字符串会自动输出至剪贴板，如果想要避免，可设置 exportselection=0 fg 或 foreground: 前景色彩 font: 字形 height:高，单位是字符高 highlightbackground:取得焦点是背景颜色 justify: 多行时设置最后一行对齐方式，left/center/right relief:控制文字外框 selectbackground:选取内容的背景色彩 selectborderwidth:选取内容的边界宽度，预设是 1 selectforeground:选取内容的前景色彩 show:显示输入字符, show=’*'表示显示星号 state:默认为 NORMAL,设为 DISABLE 时灰阶显示，表示不可用 width:宽，单位是字符宽 xscrollcommand:在 x 轴使用滚动条 方法 get():获得目前 Entry 字符串内容 insert(index, s):向 Entry 中插入字符串 delete(first, last=None):删除 Entry 中从第 first 到 last-1 字符间的字符串，delete(0,END)删除整个字符串 eval函数 返回数学表达式的结果 123expr = input(&quot;数学表达式:&quot;)# expr = 1+2print(&quot;result=&quot;, eval(expr)) Radiobutton(选项按钮) Radiobutton(父对象, options, ...) 常用options参数 activebackground:鼠标在选项按钮上时的背景色彩 activeforeground:鼠标在选项按钮上时的前景色彩 anchor:空间大于需求时，选项按钮位置，默认 CENTER bg 或 background:标签背景色彩或 indicator 的背景色彩 bitmap:位图图像对象 borderwidth 或 bd:边界宽度默认是两个像素 command:更改选项时，执行的方法 cursor:鼠标移至按钮上时的形状 fg 或 foreground: 前景色彩 font: 字形 height:高，单位是字符高,选项上文字有几行，默认一行 highlightbackground:取得焦点时背景颜色 highlightcolor:取得焦点时颜色 image:按钮上的图像 indicatoron:为 0 时，可以建立盒子选项按钮 justify: 多行时设置最后一行对齐方式，left/center/right padx:默认是 1，设置按钮和文字距离 pady:默认是 1，设置按钮上下间距 selectcolor:选取时色彩 selectimage:选取时图像 state:默认为 NORMAL,设为 DISABLE 时灰阶显示，表示不可用 text:按钮旁文字 textvariable:以变量方式显示选项按钮文字 undeline:设置第几个文字有下划线，从 0 开始算，默认-1 表示无下划线 value:选项按钮的值，可以区分选取的按钮 variable:设置或取得目前选取的单选按钮 width:选项按钮上的文字有几个字符宽，省略自动调整实际宽度 wraplength:限制每行文字数, 默认为 0，表示只有’\\n’都会换行 compound: 图像文字共存时，配置文字与图像的位置关系 Checkbutton(复选框) Checkbutton(父对象, options, ...) 常用options参数 activebackground:鼠标在选项按钮上时的背景色彩 activeforeground:鼠标在选项按钮上时的前景色彩 bg 或 background:标签背景色彩或 indicator 的背景色彩 bitmap:位图图像对象 borderwidth 或 bd:边界宽度默认是两个像素 command:更改选项时，执行的方法 cursor:鼠标移至按钮上时的形状 disabledforeground:无法操作时的颜色 font: 字形 height:高，单位是字符高,选项上文字有几行，默认一行 highlightbackground:取得焦点时背景颜色 highlightcolor:取得焦点时颜色 image:按钮上的图像 justify: 多行时设置最后一行对齐方式，left/center/right offvalue:控制变量默认未选取时值是 0 onvalue:控制变量默认未选取时值是 1 padx:默认是 1，设置按钮和文字距离 pady:默认是 1，设置按钮上下间距 relief:默认是 relief=FLAT,控制外框 selectcolor:选取时色彩 selectimage:选取时图像 state:默认为 NORMAL,设为 DISABLE 时灰阶显示，表示不可用 text:按钮旁文字 textvariable:以变量方式显示选项按钮文字 undeline:设置第几个文字有下划线，从 0 开始算，默认-1 表示无下划线 value:选项按钮的值，可以区分选取的按钮 variable:设置或取得目前选取的单选按钮 width:选项按钮上的文字有几个字符宽，省略自动调整实际宽度 wraplength:限制每行文字数, 默认为 0，表示只有’\\n’都会换行 compound: 图像文字共存时，配置文字与图像的位置关系 Frame(框架) Frame(master, options,...) options bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 cursor:鼠标移至按钮上时的形状 height:高，单位是字符高 highlightbackground:取得焦点是背景颜色 highlightcolor:取得焦点时颜色 highlightthickness:取得焦点时的厚度 relief:默认是 relief=FLAT,控制外框 width:宽，单位是像素 LabelFrame(标签框架) LabelFrame(master, options,...) options bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 cursor:鼠标移至按钮上时的形状 height:高，单位是字符高 highlightbackground:取得焦点是背景颜色 highlightcolor:取得焦点时颜色 highlightthickness:取得焦点时的厚度 labelAnchor:放置标签的位置 relief:默认是 relief=FLAT,控制外框 text:标签内容 width:宽，单位是像素 Toplevel(独立窗口) Toplevel(options,...) options bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 cursor:鼠标移至按钮上时的形状 fg:文字前景色 font: 字形 height:高，单位是字符高 width:宽，单位是像素 Scale(尺度) Scale(master, options,...) options activebackground:鼠标在尺度条上时的背景色彩 bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 command:更改数值时，执行的方法 cursor:鼠标移至尺度条上时的形状 digits:尺度数值，使用 IntVar,DoubleVar,StringVar 变量类型读取 fg:文字前景色 font: 字形 from_:范围值初值 highlightbackground:取得焦点是背景颜色 highlightcolor:取得焦点时颜色 label: length: orient: relief: repeatdelay:设置按住尺度条多久后可以拖动，默认 300ms resolution:每次更改的数值 showvalue:显示尺度条目前值，设为 0 不显示 state: takefocus:正常是可循环取得焦点，设为 0 无法取得焦点 tickinterval:标记刻度 to:末端值 troughcolor:槽(trough)的颜色 variable:设置或取得目前选取的尺度值 width:宽度或高度 askcolor()方法 Spinbox(另一种输入控件) Entry 和 Button 的结合 Spinbox(master, options,...) options activebackground:鼠标在尺度条上时的背景色彩 bg 或 background:背景色彩 borderwidth 或 bd:3D 边界宽度默认是两个像素 command:更改选项时，执行的方法 cursor:鼠标移至控件上时的形状 disabledforeground:无法操作时的颜色 disabledbackground:无法操作时的颜色 fg:文字前景色 font: 字形 format:格式化的字符串 from_:范围值初值 increment:每次单击 up/down 变化值 justify: relief: repeatdelay:设置单击 up/down 变化间隔，默认 300ms state: textvariable: values:元组或其它序列值 to:末端值 width:宽度或高度 wrap:单击 up/down 可以让数值重新开始 xscrollcommand:x 轴的滚动条 方法 get(): Message Message(父对象, options, ...) 常用options参数 anchor: 空间大于所需时，消息位置，默认 CENTER aspect: 宽度与高度比，默认 150% bg 或 background: bitmap: 不与 image 参数共存，如果两者都有设置，bitmap 将不起作用 borderwidth 或 bd cursor: fg 或 foreground: font: height: image: justify: 多行时设置最后一行对齐方式，left/center/right padx/pady:设置标签文字边界与标签区间的间距 relief: text: textvariable: underline: width: wraplength: 设置标签中文字在多少宽度后换行 Messagebox(消息对话框) showinfo(title, message, options) showwarning(title, message, options) showerror(title, message, options) askquestion(title, message, options) askokcancel(title, message, options) askyesno(title, message, options) askyesnocancel(title, message, options) askretrycancel(title, message, options) options参数 default constant: 默认按钮是 OK/YES/Retry 在前面，也可更改此设定 icon(constant):设定显示图标，INFO/ERROR/QUESTION/WARNING parent(widget):对话框关闭时，焦点窗口将返回此父窗口 Listbox(列表框) Listbox(master, options,...) options bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 cursor:鼠标移至按钮上时的形状 fg 或 foreground: font: height:高，单位是字符高 highlightcolor:取得焦点时颜色 highlightthickness:取得焦点时的厚度 listvariable:以变量方式处理选项内容 relief:默认是 relief=FLAT,控制外框 selectbackground: selectmode:决定多少可选和鼠标拖拽如何影响选项 BROWSE:默认值 SINGLE: MULTIPLE: EXTENDED: width:宽，单位是像素 xscrollcommand: blog/imagesllcommand: 方法 insert(index, elements):为列表框建立项目 size(): 传回列表项目数量 selection_set(index): 选取特定索引项 delete(indexStart, indexEnd=None):删除特定索引项 get(start,end=None):传回指定索引项 curselection():传回选取项目的索引 selection_include(index):检查指定索引是否被选中 事件 &lt;&lt;ListboxSelect&gt;&gt;:虚拟事件，执行选取操作时触发 Scrollbar(滚动条) Scrollbar(master, options,...) options activebackground:鼠标在尺度条上时的背景色彩 bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 command:更改数值时，执行的方法 cursor:鼠标移至尺度条上时的形状 elementborderwidth:滚动条和方向箭头的外部宽度，默认是 1 highlightbackground:取得焦点是背景颜色 highlightcolor:取得焦点时颜色 highlightthickness:获得焦点时的厚度 jump:默认是 0，每次拖拽都触发事件，设为 1 时，方形鼠标按键时才触发事件 orient: repeatdelay:设置按住尺度条多久后可以拖动，默认 300ms takefocus:可以按 Tab 切换滚动条成为焦点，设 0 取消此设置 troughcolor:槽(trough)的颜色 variable:设置或取得目前选取的尺度值 width:宽度,默认 16 像素 OptionMenu(下拉式列表) OptionMenu(master, options,*value) *value 时一系列下拉列表 Combobox(组合框) Combobox(master, options) options参数 textvariable:设置变量值 value:选项内容，以元组方式存在 PanedWindow(面板) PanedWindow(master, options,...) options bg 或 background:鼠标不在控件时，若有滚动条或方向盒时，滚动条或方向盒的背景色彩 bd: 3D 显示时的宽度，默认是 2 borderwidth:边界线宽度默认是两个像素 cursor:鼠标移至控件上时的形状 handlepad: 面板显示宽度,默认是 8 handlesize: 面板显示大小, 默认是 8 height: 没有默认高度 orient: 面板方向默认是 HORIZONTAL relief: 默认 FLAT sashcursor: 分隔线光标, 没有默认值 sashrelief: 面板分隔线外框，默认 RAISED showhandle:滑块属性，可设定为是否显示，没有默认值 width:整体宽度，没有默认值 方法 add(widget, options): 插入子控件 options 中 widget 控制缩放时子控件占比 Notebook(选项卡) Notebook(master, optins, ...) options height:默认使用最大可能高度 padding: 设置外围的额外空间，可以设置 4 个值，代表 left/top/right/bottom 四周的空间 width: 默认使用最大可能宽度 方法 add(widget, options):添加子对象 options compound:同时有图像和文字时，两者的关系 image:以图像方式呈现 padding: 设置额外空间 state:可设：normal/disabled,hidden sticky: 子窗口面板的配置方式，nsew text: 选项卡中字符串内容 underline: 指出第几个字母含下划线 Progressbar(进度条) Progerssbar(master, options,...) options: length: 长度，默认 100 像素 mode:模式 determinate: 从起点到终点 indeterminate: 在起点和终点间来回移动 maximum:最大值，默认 100 name:名称，供参考引用 orient:方向，HORIZONTAL/VERTICAL value: 目前值 variable:记录目前进度值 动画 在每次更新进度 value 值时调用 update()方法 方法 start(interval):每隔 interval 时间移动一次指针。默认 50ms step(delta):每次增加一次 delta,默认是 1.0 stop():停止 start()的运行 Menu(菜单) Menu(master, options) options: activebackground:鼠标在选项按钮上时的背景色彩 activeborderwidth:鼠标在选项按钮上时的外边框宽度 activeforeground:鼠标在选项按钮上时的前景色彩 bd:所有菜单的外边框宽度 bg 或 background:未被选取时的背景色彩 cursor:鼠标移至按钮上时的形状 disabledforeground: disabled 时的前景色彩 font: 字形 fg:未被选取时的前景色彩 image:按钮上的图像 tearoff:菜单上方的分隔线 方法 add_cascade():建立分层菜单 add_command():增加菜单列表 undeline:为字母增加下划线，按 Alt+下划线字母启用快捷功能 accelerator:ctrl 快捷键，accelerator=‘Ctrl+N’ add_separator():增加菜单列表的分隔线 弹出式菜单 add_checkbutton(): Toolbar(工具栏) Text(列表框) Text(master, options,...) options bg 或 background:背景色彩 borderwidth 或 bd:边界宽度默认是两个像素 cursor:鼠标移至按钮上时的形状 exportselection: fg 或 foreground: font: height:高，单位是字符高 highlightbackground:取得焦点时背景颜色 highlightcolor:取得焦点时颜色 highlightthickness:取得焦点时的厚度 insertbackground:插入光标的颜色 insertborderwidth: 围绕游标的 3D 厚度，默认是 0 padx: pady: relief:默认是 relief=FLAT,控制外框 selectbackground: selectborderwidth: selectforeground: state: width:宽，单位是字符宽 wrap:控制某行文字太长时的处理,默认是 wrap=CHAR,从字符断行；warp=WORD 时，从字做断行 xscrollcommand: blog/imagesllcommand: 方法 insert(index, string):将字符串插入指定的索引位置 get(): 取得目前所选文字,选取文字时，Text 对象将所选文字起始位置放在 SEL_FIRST,结束索引放在 SEL_LAST; 索引形式： line/column(&quot;line.column&quot;) INSERT CURRENT: END: 表达式Expression:索引表达式，说明如下 +count chars,如“+2c”索引往后移动两个字符 -count chars,如“-2c”索引往前移动两个字符 书签：特殊位置建立书签，方便查询 index(mark):传回指定书签的 line 和 column mark_names():传回这个 Text 对象所有的书签、 mark_set(mark, index):在指定的 index 位置设置书签 `mark_unset(mark):取消指定书签设置 标签：指一个区域文字，为这个区域取的名字 tag_add(tagname, startindex[,endindex]...) tag_config(tagname, options,...): options: background: borderwidth: font: foreground: justify: overstrike: underline: wrap: tag_delete(tagname):删除标签，同时移除此标签特殊的编辑或绑定 tag_remove(tagname[,startindex[,endindex]]...):删除标签，不移除此标签特殊的编辑或绑定 cut/copy/paste 重复与复原 查找文字 pos=text.search(key, startindex, endindex): pos: 找到的字符传索引位置 key: 字符传 startindex: 查找起始位置 endindex: 查找结束位置 拼写检查 保存 新建文档 打开文档 ScrolledText:默认含滚动条 1text = ScrolledText(root, undo=True) 插入图像 其它 若要 x 轴显示滚动条，wrap 需设置为 none Treeview(树状表格数据) Treeview(master, options,...) options: columns:栏位字符串 cursor: displaycolumns: 可设置栏位显示顺序 height: padding: selectmode: BROWSE: EXTENDED: NONE: show: takefocus: tree/heading 格式化栏位内容 column(id, options) anchor: minwidth: stretch: width: 建立不同颜色行内容 tag_configure(&quot;tagname&quot;,options,...) background: font: foreground: image: 建立层级Treeview 图像 insert()方法增加 image 参数 可能需增加行高： Style().configure(&quot;Treeview&quot;,rowheight=xx) Selection事件 删除项目 添加项目 双击项目 Scroll 排序 Canvas(画布) canvas=Canvas(tk,width=xx,height=xx) 绘制线条 create_line(x1,y1,x2,y2,...,xn,yn,options) options arrow: tk.FIRST/tk.LAST/tk.BOTH arrowshape:元组（d1,d2,d3） capstyle:BUTT/PROJECTING/ROUND dash: dashoffset fill joinstyle:ROUND/BEVEL/MITER stripple width 绘制矩形 create_rectangle(x1,y1,x2,y2,options) options dash dashoffset fill outline stripple width 绘制圆弧 create_arc(x1,y1,x2,y2,extend=angle, style=ARC,options) options dash dashoffset extent fill outline start stripple style width 绘制圆或椭圆 create_oval(x1,y1,x2,y2,options) options dash dashoffset fill outline stripple width 绘制多边形 create_polygon(x1,y1,x2,y2,...,xn,yn,options) options dash: dashoffset fill outline stripple width 输出文字 create_text(x,y,text='',options) anchor fill font justify stipple text width 更改画布背景颜色 建立画布时，增加 bg 参数设置画布背景颜色 插入图像 create_image(x,y,options) options anchor image 鼠标拖拽绘制线条 基本动画 12canvas.move(ID, xMove, yMove)canvas.update() 多个球移动 12345678# 增加随机数for x in range(0, 100): if randint(1, 100) &gt; 70: canvas.move(id2, 5, 0) else: canvas.move(id1, 5, 0) tk.update() time.sleep(0.05) 消息绑定 123456789101112def ballMove(event): canvas.move(1, 5, 0)def ballMove(event): if event.keysym == &#x27;Right&#x27;: canvas.move(1, 5, 0)canvas.bind_all(&#x27;&lt;KeyPress-Left&gt;&#x27;, ballMove)canvas.bind_all(&#x27;&lt;KeyPress-Right&gt;&#x27;, ballMove)canvas.bind_all(&#x27;&lt;KeyPress-Up&gt;&#x27;, ballMove)canvas.bind_all(&#x27;&lt;KeyPress-Down&gt;&#x27;, ballMove) 反弹球 向下移动 位置信息 123456ballPos = canvas.coords(id)ballPos[0] 左x坐标ballPos[1] 上y坐标ballPos[2] 右x坐标ballPos[3] 下y坐标 上下反弹 四面反弹 球拍 123456789101112id = canvas.create_rectangle(0,0,100,15,fill=color)canvas.move(id,270,400)# 移动canvas.bind_all(&#x27;&lt;KeyPress-Right&gt;&#x27;, moveRight)canvas.bind_all(&#x27;&lt;KeyPress-Left&gt;&#x27;, moveLeft)def moveLeft(self, event): self.x = -3def moveRight(self, event): self.x = 3 碰撞 完整 PhotoImage(图像) 支持gif和png格式 123456789imgObj = PhotoImage(file=&quot;xxx.gif&quot;)label = Label(root, image=imgObj)# 兼容# pip install pillowfrom PIL import Image, ImageTkimg = Image.open(&#x27;xxx.jpg&#x27;)imgObj = ImageTk.PhotoImage(image)label = Label(root, image=imgObj) Separator(分隔线) Separator(master, options) orient: HORIZONTAL 水平分隔线；VERTICAL 垂直分隔线 Wodget Layout Manager(窗口控件配置管理员) pack 方法 pack(options, ...) options参数 side:垂直或水平配置控件 TOP:由上而下 BOTTOM:由下而上 LEFT:由左而右 RIGHT:由右而左 fill: 设置填满所分配容器区间的方式 fill=X: X 轴不留白 fill=Y: Y 轴不留白 fill=BOTH:X 轴 Y 轴均不留白 fill=None:保持原有大小 padx/pady:控件边界与容器距离或控件边界间的距离 ipadx/ipady: 标签文字与标签容器间距 anchor:控件在窗口中的位置，指控件内容在控件区域的位置 expand:控件是否填满额外的父容器空间，False 或 True 方法 slaves(): 所有控件对象 info():pack 选项对应的值 forget():隐藏控件，可用 pack(options, …)复原显示 location(x, y):传回此点是否在单元格，如果是传回坐标，如果不是传回(-1,-1) size(): 控件大小 propagate(boolean):True 表示父窗口大小由子控件决定 grid 方法 gird(options, ...) options参数 row: column: padx/pady:控件边界与容器距离或控件边界间的距离 rowspan: row 方向合并数量 columnspan: column 方向合并数量 sticky: 类似 anchor，可配置 N/S/W/E；组合之后可拉长拉宽控件 方法 rowconfigure()/columnconfigure():设定第几个 row 或 column 的绽放比例 place 方法 place(options, ...) options参数 height/width:设定控件的实体大小 relx/rexy:相对于父容器的位置 x/y:设置左上方位置 relheight/relwidth:相对大小；0.0~1.0 bordermode: anchor: Variable Classes(变量类别) 更改控件内容可使用控件参数，如 textvariable/variable/onvalue 等 123456789x = IntVar()x = DoubleVar()x = StringVar()x = BooleanVar()def callbackW(*args): passx.trace(&#x27;w&#x27;, callbackW) get():取得变量内容 set():设置变量内容 trace(mode, callback):x.trace(‘r’, callback),r 表示执行读取时执行隐函数，w 表示修改时执行隐函数 callback(name, index, mode)参数：name,tk 变量名称；index 索引；mode 模式 事件绑定 Event 对象属性： type 事件类型 char 键盘事件 ascii 码 keycode 键盘事件 键盘代码 delta 鼠标滚动事件 滚轮滚动的距离 widget.bind(event, handler): 绑定事件，可绑定多个事件处理程序，新增加事件处理中在 bind 方法中增加 add=’+‘参数 `obj.unbind(’&lt;xxx&gt;’): 解除绑定，xxx 为绑定方式 事件类型 鼠标事件 说明 &lt;Button-1&gt; 左键单击 &lt;Button-2&gt; 中键单击 &lt;Button-3&gt; 右键单击 &lt;Button-4&gt; 滑轮上滚 &lt;Button-5&gt; 滑轮下滚 &lt;Motion&gt; 移动 &lt;B1-Motion&gt; 按住左键移动 &lt;B2-Motion&gt; 按住中键移动 &lt;B3-Motion&gt; 按住右键移动 &lt;ButtonRelease-1&gt; 放开左键 &lt;ButtonRelease-2&gt; 放开中键 &lt;ButtonRelease-3&gt; 放开右键 &lt;Double-Button-1&gt; 双击左键 &lt;Double-Button-2&gt; 双击中键 &lt;Double-Button-3&gt; 双击右键 &lt;Enter&gt; 进入 widget &lt;Leave&gt; 离开 widget 键盘事件 说明 &lt;FocusIn&gt; 键盘焦点进入控件 &lt;FocusOut&gt; 键盘焦点离开控件 &lt;Return&gt; 按下 Enter 键，键盘所有键都可以绑定，如：Cancel/BackSpace/Next/Prior/F1~F12/ &lt;Key&gt; 某个键 &lt;Shift-Up&gt; Shift+Up &lt;Alt-Up&gt; Alt+Up &lt;Ctrl-Up&gt; Ctrl+Up 控件事件 说明 &lt;Configure&gt; 更改控件的大小和位置 Protocols(通信协议) 单击内容窗口右上角的关闭按钮的通信协议名称为WM_DELETE_WINDOW","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"python","slug":"python","permalink":"https://me.ehoac.cn:10443/tags/python/"}]},{"title":"git笔记","slug":"git-note","date":"2020-08-27T07:41:18.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2020/08/27/git-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/08/27/git-note/","excerpt":"多用户配置 ssh 1234567891011121314151617181920ssh-keygen -t rsa -C &quot;example@email.com&quot;-- .ssh 目录下新建config文件Host gitlab User caopeihe Hostname 192.168.3.17 IdentityFile ~/.ssh/id_rsa_gitlab PreferredAuthentications publickeyHost github User ehoac Hostname github.com IdentityFile ~/.ssh/id_rsa_github PreferredAuthentications publickeyHost gitea User ehoac Hostname 127.0.0.1 IdentityFile ~/.ssh/id_rsa_gitea PreferredAuthentications publickey","text":"多用户配置 ssh 1234567891011121314151617181920ssh-keygen -t rsa -C &quot;example@email.com&quot;-- .ssh 目录下新建config文件Host gitlab User caopeihe Hostname 192.168.3.17 IdentityFile ~/.ssh/id_rsa_gitlab PreferredAuthentications publickeyHost github User ehoac Hostname github.com IdentityFile ~/.ssh/id_rsa_github PreferredAuthentications publickeyHost gitea User ehoac Hostname 127.0.0.1 IdentityFile ~/.ssh/id_rsa_gitea PreferredAuthentications publickey 配置用户 12git config --global user.email &quot;example@email.com&quot;git config --global user.name &quot;example&quot; gitea 重置密码 1./gitea admin change-password --username username --password new_password 问题 XXX：Permission denied (password) 检查/etc/sshd_config中配置 12RSAAuthentication yesPubkeyAuthentication yes 修改后重启ssh服务","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"版本控制","slug":"版本控制","permalink":"https://me.ehoac.cn:10443/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"},{"name":"git","slug":"git","permalink":"https://me.ehoac.cn:10443/tags/git/"}]},{"title":"《以交易为生》读书笔记","slug":"live-on-business","date":"2020-07-14T04:34:27.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2020/07/14/live-on-business/","link":"","permalink":"https://me.ehoac.cn:10443/2020/07/14/live-on-business/","excerpt":"术语 空头：从事商品、有价证券交易的人，预料货价将跌而卖出现货或期货，伺机买进相抵，这种做法叫空头。 多头：从事商品、有价证券交易的人，预料货价将涨而买进现货或期货，伺机卖出，这种做法叫多头。","text":"术语 空头：从事商品、有价证券交易的人，预料货价将跌而卖出现货或期货，伺机买进相抵，这种做法叫空头。 多头：从事商品、有价证券交易的人，预料货价将涨而买进现货或期货，伺机卖出，这种做法叫多头。 导论 成功交易的三大支柱分别是心理、市场分析和风险管理，良好的交易记录则是把它们结合起来的关键。 为了减少滑点，尽可能选择在流动性好成效量高的市场进行交易。 避开交易冷清的股票，因为那里的滑点通常较高。 在市场平静的时候，用限价指令在指定价格交易。 记录好下单的价格。如果有必要时，让经纪商到场内为你争取更好的价格。 寻找一位佣金最低的经纪商，并像鹰一样地监控他。设计一套发出交易信号不太频繁的交易系统，让你能在市场稳定的时候建仓。 尽量只用限价指令——除非是设置止损时。要小心那些需要花钱的工具，这个世界没有神奇的解决方式，成功不可能买得到，只能靠自己的双手去创造。 个体心理","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"https://me.ehoac.cn:10443/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"股票","slug":"股票","permalink":"https://me.ehoac.cn:10443/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"数据库笔记","slug":"数据库笔记","date":"2020-07-09T07:41:03.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2020/07/09/数据库笔记/","link":"","permalink":"https://me.ehoac.cn:10443/2020/07/09/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0/","excerpt":"","text":"概述 关系数据库 关系数据库管理系统(Relational DataBase Management System, RDBMS)是以集合理论为基础的系统，实现为具有行和列的二维表。 与 RDBMS 交互的标准方法，是结构化查询语言(Structured Query Language, SQL)编写查询。 数据值具有类型，可以是数字、字符串、日期、未解释的二进制大对象，或其他类型。系统强制使用类型。 重要的是，表可以联接并转化为新的、更复杂的表，因为它们的数学基础是关系(集合)理论。 键-值数据库 键-值(Key-Value, KV)存储库将键与值配对，类似于所有流行编程语言中的映射（或哈希表）。 因为 KV 存储库对资源的要求非常少，所以这种数据库类型在一些场景中有令人难以置信的高性能，但是当你有复杂的查询和聚合需求时，它一般不会有帮助。 列型数据库 列型（或面向列的数据库）的命名源自于其设计设计的一个重要方面，即来自一个给定的列（在二维表的意义上）的数据存放在一起。 文档型数据库 面向文档的数据库存储的就是文档。简而言之，文档就像是哈希，具有一个独一无二的标识符（ID）字段和值，值可能是任何类型，包括更多的哈希。 文档可以包含嵌套的结构，因此，它们表现出了调试的灵活性，允许有可变域。 图数据库 图数据库善于处理高度互联的数据。图数据库包含节点及节点之间的关系。 节点和关系可以有一些属性（一些键-值对），用来存储数据。 图数据库的真正实力是按照关系遍历节点。 PostgerSQL 简述 PostgreSQL 是一个关系数据库管理系统。 关系数据库流行的原因，不仅在于其庞大的特性集（触发器、存储过程、高级索引）、数据的安全性（符合 ACID），或符合大多数人的思维方式，还在于它们的查询灵活性。 基本使用 如果以管理员用户运行的话，PostgreSQL 的提示符后是#,如果是普通普通用户后面跟的是$。 输入\\h，可以列出有关 SQL 命令的信息，\\?列出以反斜杠开始的 psql 特有命令的帮助信息。 创建表 12345678910-- 新建表create table countries ( country_code char(2) primary key, country_name text unique);-- 从已有表创建(只有表结构)create table countries_copy as select * from countries where 1=0;-- 从已有表创建(表结构和数据)create table countries_copy as select * from countries where 1=1; 基本表操作 1234567891011121314151617-- 重命名表alter table [表名A] rename to [表名B];-- 添加字段alter table [表名] add column [字段名] [类型];-- 修改字段类型alter table [表名] alter COLUMN [字段名] type [类型];-- 删除字段alter table [表名] drop column [字段名];-- 重命名字段alter table [表名] rename column [字段名A] to [字段名B];-- 给字段设置默认值alter table [表名] alter column [字段名] set default [新的默认值];-- 去除字段默认值alter table [表名] alter column [字段名] drop default;-- 更改列的名字ALTER TABLE [表名] RENAME [旧字段名] to [新字段名]; 插入数据 12345678insert into countries (country_code, country_name) values (&#x27;us&#x27;, &#x27;United States&#x27;), (&#x27;mx&#x27;, &#x27;Mexico&#x27;), (&#x27;au&#x27;, &#x27;Australia&#x27;), (&#x27;gb&#x27;, &#x27;United Kingdom&#x27;), (&#x27;de&#x27;, &#x27;Germany&#x27;), (&#x27;ll&#x27;, &#x27;Loompaland&#x27;); 查询数据 1select * from countries; 删除数据 1delete from countries where country_code=&#x27;ll&#x27;; 外键约束 1234567create table cities( name text not null, postal_code varchar(9) check (postal_code &lt;&gt; &#x27;&#x27;), country_code char(2) references countries, primary key (country_code, postal_code));insert into cities values (&#x27;Portland&#x27;, &#x27;87200&#x27;, &#x27;us&#x27;); 更新 1update cities set postal_code=&#x27;97205&#x27; where name=&#x27;Portland&#x27;; 内联接 只有列值匹配，inner join才会返回一行 1select cities.*, country_name from cities inner join countries on cities.country_code=countries.country_code; 复合联接 12345678910111213create table venues ( venue_id serial primay key, name varchar(255), street_address text, type char(7) check (type in (&#x27;public&#x27;, &#x27;private&#x27;)) default &#x27;public&#x27;, postal_code varchar(9), country_code char(2), foreign key (country_code, postal_code) references cities (country_code, postal_code) match full);insert into venues (name, postal_code, country_code) values (&#x27;Crystal Ballroom&#x27;, &#x27;97205&#x27;, &#x27;us&#x27;);select v.venue_id, v.name, c.name from venues v inner join cities c on v.postal_code=c.postal_code and v.country_code=c.country_code; 插入后返回 123insert into venues (name, postal_code, country_code) values(&#x27;Voodoo Dounts&#x27;, &#x27;97205&#x27;, &#x27;us&#x27;) returning venue_id; 外联接 12345678910111213141516create table events ( event_id serial primary key, title varchar(255), starts timestamp, ends timestamp, venue_id bigint, foreign key (venue_id) references venues (venue_id));insert into events (title, starts, ends, venue_id) values (&#x27;Larp Club&#x27;, &#x27;2012-02-15 17:30:00&#x27;, &#x27;2020-02-15 19:30:00&#x27;, 2), (&#x27;April Fools Day&#x27;, &#x27;2012-04-01 00:00:00&#x27;, &#x27;2020-04-01 23:59:00&#x27;, null), (&#x27;Christmas Day&#x27;, &#x27;2012-12-25 00:00:00&#x27;, &#x27;2020-12-25 23:59:00&#x27;, null);-- 内联接select e.title, v.name from events e join venues v on e.venue_id=v.venue_id;-- 左外联接(left outer join/left join)select e.title, v.name from events e left join venues v on e.venue_id=v.venue_id; 快速索引 RDBMS数据库的速度源于其高效的数据块管理、尽可能少的磁盘读取、查询优化等技术。 如果没有索引，就必须从磁盘读取每一行，都能知道是否是匹配行。 索引是一个特殊的数据结构，目的是避免执行查询时进行全表扫描。 123456-- 哈希索引create index events_title on events using hash(title);-- B树索引create index events_starts on events using btree(starts);-- 列出数据模式中的所有索引\\di 聚合查询 1234567891011121314-- 准备数据insert into countries values(&#x27;zh&#x27;, &#x27;China&#x27;);insert into cities values (&#x27;ZhengZhou&#x27;, &#x27;457100&#x27;, &#x27;zh&#x27;);insert into venues (name, postal_code, country_code) values (&#x27;My Place&#x27;, &#x27;457100&#x27;, &#x27;zh&#x27;);insert into events (title, starts, ends, venue_id) values(&#x27;Moby&#x27;, &#x27;2012-02-06 21:00:00&#x27;, &#x27;2012-02-06 23:00:00&#x27;, (select venue_id from venues where name=&#x27;Crystal Ballroom&#x27;)),(&#x27;Wedding&#x27;, &#x27;2012-02-26 21:00:00&#x27;, &#x27;2012-02-26 23:00:00&#x27;, (select venue_id from venues where name=&#x27;Voodoo Donuts&#x27;)),(&#x27;Dinner with Mom&#x27;, &#x27;2012-02-26 18:00:00&#x27;, &#x27;2012-02-06 20:30:00&#x27;, (select venue_id from venues where name=&#x27;My Place&#x27;)),(&#x27;Valentine&#x27;&#x27;s Day&#x27;, &#x27;2012-02-14 00:00:00&#x27;, &#x27;2012-02-14 23:59:00&#x27;, null);-- count()select count(title) from events where title like &#x27;%Day%&#x27;;-- max()、min()select min(starts), max(ends) from events inner join venues on events.venue_id=venues.venue_id where venues.name=&#x27;Crystal Ballroom&#x27;; 分组 12345678select venue_id, count(*) from events group by venue_id;-- havingselect venue_id, count(*) from events group by venue_id having count(*) &gt;= 2 and venue_id is not null;-- distinctselect distince venue_id from events;-- 窗口函数select title, count(*) over (partition by venue_id) from events; 事务 事务保障了关系数据库的一致性。 事务的准则是，要么全部成功，要么全部失败。 事务确保一组命令中的每一条命令都执行。 如果过程中间发生了任何失败，所有的命令将回滚，就像它们从未发生过一样。 PostgreSQL 的事务遵循 ACID A：Atomic，原子性 C：Consistent，一致性 I：Isolated，隔离性 D：Durable,持久性 1234begin transaction;delete from events;rollback;select * from events; 存储过程 存储过程可以通过巨大的架构代价取得巨大的性能优势。 使用存储过程可以避免将数千行数据发送到客户端应用程序，但也让应用程序代码与该数据库绑定，因此，不应该轻易决定使用存储过程。 123456789101112131415161718192021222324252627create or replace function add_event(i_title text, i_starts timestamp, i_ends timestamp, venue text, postal varchar(9), country char(2)) returns boolean as $$ declare did_insert boolean := false; found_count integer; the_venue_id integer; begin select venue_id into the_venue_id from venues v where v.postal_code=postal and v.country_code=country and v.name ilike venue limit 1; if the_venue_id is null then insert into venues (name, postal_code, country_code) values (venue, postal, country) returning venue_id into the_venue_id; did_insert := true; end if; raise notice &#x27;Venue found %&#x27;, the_venue_id; insert into events( title, starts, ends, venue_id) values (i_title, i_starts, i_ends, the_venue_id); return did_insert;end;$$ language plpgsql;-- 使用select add_event(&#x27;House Party&#x27;, &#x27;2012-05-03 23:00:00&#x27;, &#x27;2012-05-04 02:00:00&#x27;, &#x27;Run&#x27;&#x27;s House&#x27;, &#x27;97205&#x27;,&#x27;us&#x27;);-- 将外部文件导入当前数据库\\i filename.sql-- 查看数据库中安装的语言createlang dbname -l 触发器 当插入或更新这类事件发生时，触发器自动调用存储过程。 1234567891011121314151617181920212223242526-- 日志表create table logs ( event_id integer, old_title varchar(255), old_starts timestamp, old_ends timestamp, logged_at timestamp default current_timestamp);-- functioncreate or replace function log_event() returns triggeras $$declarebegin insert into logs (event_id, old_title, old_starts, old_ends) values (OLD.event_id, OLD.title, OLD.starts, OLD.ends); raise notice &#x27;someone just chage event #%&#x27;, OLD.event_id; return NEW;end;$$language plpgsql;-- 创建触发器create trigger log_events after update on events for each row execute procedure log_event();-- 测试update events set ends=&#x27;2012-05-04 01:00:00&#x27; where title=&#x27;House Party&#x27;;select * from logs; 视图 使复杂查询的结果用起来像其他任何表一样，是查询的别名。 1234567891011121314151617181920-- 创建视图create view holidays as select event_id as holiday_id, title as name, starts as date from events where title like &#x27;%Day%&#x27; and venue_id is NULL;-- 查询select name, to_char(date, &#x27;MonthDD,YYYY&#x27;) as date from holidays where date &lt;= &#x27;2020-04-01&#x27;;-- 为视图增加新字段需要在源表增加alter table events add colors text array;-- 更新视图create or replace view holidays as select event_id as holiday_id, title as name, starts as date,colors from events where title like &#x27;%Day%&#x27; and venue_id is NULL;-- 通过视图更新数据create rule update_holidays as on update to holidaysdo instead update events set title = NEW.name,starts=NEW.date,colors=NEW.colors where title=OLD.name;-- 直接更新视图update holidays set colors=&#x27;&#123;&quot;red&quot;, &quot;green&quot;&#125;&#x27; where name=&#x27;Christmas Day&#x27;; 联表分析 12345678910111213141516171819202122-- extensionCREATE EXTENSION tablefunc;-- extract()select extract(year from starts) as year, extract(month from starts) as month, count(*) from events group by year,month;--create temporary table month_count(month int);insert into month_count values(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12);-- crosstab()select * from crosstab( &#x27;select extract(year from starts) as year, extract(month from starts) as month, count(*) from events group by year,month&#x27;, &#x27;select * from month_count&#x27;) as ( year int, jan int, feb int, mar int, apr int, may int, jun int, jul int, aug int, sep int, oct int, nov int, dec int ) order by year;-- generate_series(a,b)select * from crosstab( &#x27;select extract(year from starts) as year, extract(month from starts) as month, count(*) from events group by year,month&#x27;, &#x27;select generate_series(1, 12)&#x27;) as ( year int, jan int, feb int, mar int, apr int, may int, jun int, jul int, aug int, sep int, oct int, nov int, dec int ) order by year; 全文和模糊查询 ilike表示不区分大小写 '%'和_是通配符，_表示匹配一个字符 1234567891011121314151617181920212223242526272829-- 需要的扩展create extension tablefunc;create extension dict_xsyn;create extension fuzzystrmatch;create extension pg_trgm;create extension cube;-- 创建测试表create table genres( name text unique, position integer);create table movies ( movie_id serial primary key, title text, genre cube);create table actors ( actor_id serial primary key, name text);create table movies_actors( movie_id integer references movies not null, actor_id initeger references actors not null, unique(movie_id, actor_id));create index movies_actors_movie_id on movies_actors(movie_id);create index movies_actors_actor_id on movies_actors(actor_id);create index movies_genres_cube on movies using gist(genre); 正则表达式查询 1234select count(*) from movies where title !~*&#x27;^the.*&#x27;;-- 字符串索引类型 varchar_pattern_ops, bpchar_pattern_ops, name_pattern_opscreate index movies_title_pattern on movies (lower(title) text_pattern_ops); 字符串相似比较算法 levenshtein fuzzystrmatch 扩展模块提供 12345select levenshtein (&#x27;bat&#x27;, &#x27;fads&#x27;);select levenshtein(&#x27;bat&#x27;, &#x27;fad&#x27;) fad, levenshtein(&#x27;bat&#x27;, &#x27;fat&#x27;) fat, levenshtein(&#x27;bat&#x27;, bat&#x27;) bat;select movie_id, title from movies where levenshtein(lower(title), lower(&#x27;aharddaynght&#x27;)) &lt;= 3; 三连词（trigram）,pg_trgm 扩展 12345678910select show_trgm(&#x27;Avatar&#x27;);-- 创建三连词索引(通用索引搜索树[Generalized Index Search Tree, GIST])create index movies_title_trigram on movies using gist(title gist_trgm_ops);-- TSVector &amp; TSQueryselect title from movies where title @@&#x27;night&amp;day&#x27;;-- 查看已安装的语言配置\\dF 全文检索 1234567891011121314151617181920212223242526-- @@ 全文查询运算-- @@ 运算符将搜索内容转换成tsvector结构休，并将查询转换成一个tsquery结构体select title movies where title @@ &#x27;night&amp;day&#x27;;-- 设置了语言的查询select title from movies where to_tsvector(title) @@ to_tsquery(&#x27;english&#x27;, &#x27;night&amp;day&#x27;);-- tsvector上的单词称为词素（lexeme）select to_tsvector(&#x27;AHardDay&#x27;&#x27;sNight&#x27;), to_tsquery(&#x27;english&#x27;, &#x27;night&amp;day&#x27;);-- explain 命令查看查询计划树explain select * from countries where country_name @@ &#x27;english&amp;us&#x27;;-- 建立反射索引create index countries_name_searchable on countries using gin(to_tsvector(&#x27;english&#x27;, country_name));-- 发音码metaphoneselect country_name from countries natural join cities natural join venues where metaphone(name, 6)=metaphone(&#x27;UnitiStat&#x27;, 6);-- fuzzystrmatch模块其它函数：dmetaphone() (双发音码)、dmetaphone_alt()(替代发音)、soundex() (19世纪80年代的美国人口普查创立的、用来对比常见的美国人姓的古老算法)select name, dmetaphone(name), dmetaphone_alt(name),metaphone(name, 8),soundex(name) from venues;-- 组合使用字符串匹配方法select * from venues where metaphone(name, 8) % metaphone(&#x27;OwnPlace&#x27;, 8) order by levenshtein(lower(&#x27;OwnPlace&#x27;),lower(name));select * from venues where dmetaphone(name) % dmetaphone(&#x27;Min&#x27;); 多维超立方体（cube） 1234567891011121314select name cube_ur_coord(&#x27;(0,7,0,0,0,0,0,0,0,7,0,0,0,0,10,0,0,0)&#x27;, street_address) as score from venues v where cube_ur_coord(&#x27;(0,7,0,0,0,0,0,0,0,7,0,0,0,0,10,0,0,0)&#x27;, street_address) &gt; 0;select *, cube_distance(genre,&#x27;(0,7,0,0,0,0,0,0,0,7,0,0,0,0,10,0,0,0)&#x27;) dist from movies order by dist;-- 有界立方体(bounding cube)select cube_enlarge(&#x27;(1,1)&#x27;, 1, 2);-- cube运算符&#x27;@&gt;&#x27;,意思是包含select title, cube_distance(genre, &#x27;(0,7,0,0,0,0,0,0,0,7,0,0,0,0,10,0,0,0)&#x27;) dist from movieswhere cube_enlarge(&#x27;(0,7,0,0,0,0,0,0,0,7,0,0,0,0,10,0,0,0)&#x27;::cube, 5, 18) @&gt; genre order by dist;select m.movie_id, m.title from movies m, (select genre, title from movies where title=&#x27;MadMax&#x27;) s where cube_enlarge(s.genre, 5, 18) @&gt; m.genre and s.title&lt;&gt;m.title order by cube_distance(m.genre, s.genre) limit 10; MariaDB 管理 123456# 创建新的用户帐户&#x27;newusername&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;userpassword&#x27;;# 添加权限GRANT SELECT, INSERT, UPDATE, DELETE ON database1 TO &#x27;newusername&#x27;@&#x27;localhost&#x27;;# 刷新授权表FLUSH PRIVILEGES; 数据类型 数字 TINYINT: -128到127的有符号范围内的小整数或0到255的无符号整数 BOOLEAN: 0=false,1=true SMALLINT: -32768到32768的有符号范围内的整数或0到65535的无符号整数 MEDIUMINT: 有符号范围-8388608到8388607中的整数，无符号范围0到16777215中的整数 INT(或 INTEGER): 默认范围跨越-2147483648到2147483647,标记为unsigned时范围跨越0到4294967295 BIGINT: 有符号范围9223372036854775808到9223372036854775807内的整数,无符号范围0到18446744073709551615内的整数 DECIMAL（DEC，NUMERIC，FIXED）: 精确的定点数，M 指定其数字，D 指定小数后的数字。 M 值不添加“ - ”或小数点。如果 D 设置为 0，则不会出现小数或小数部分，并且该值将舍入为最接近的 DECIMAL INSERT。最大允许位数为 65，小数位数的最大值为 30.默认值 M 的默认值为 10，省略时 D 为 0 FLOAT: -3.402823466E + 38 至-1.175494351E-38, 1.175494351E-38 至 3.402823466E + 38 DOUBLE(或 REAL、DOUBLE PRECISION): -1.7976931348623157E + 308至-2.2250738585072014E-308, 2.2250738585072014E-308至1.7976931348623157E + 308 BIT: 表示位字段,M 指定每个值的位数。省略 M 时，默认值为 1.位值可以通过“b’[value]’”应用，其中值表示 0 和 1 中的位值。零填充从左边自动发生全长;例如，“10”变为“0010” 日期和时间 DATE: 表示日期范围1000-01-01”到“9999-12-31,并使用YYYY-MM-DD日期格式 TIME: -838：59：59.999999到838：59：59.999999的时间范围 DATETIME: 表示范围1000-01-01 00：00：00.000000至9999-12-31 23：59：59.999999,使用YYYY-MM-DD HH：MM：SS格式 TIMESTAMP: 表示YYYY-MM-DD HH：MM：DD格式的时间戳 YEAR: 表示 4 位数格式的年份,四位数格式允许在1901到2155和0000范围内的值 字符串 String literals: 表示用引号括起来的字符序列 CHAR: 表示包含指定长度的空格的右侧带有固定长度的字符串,取值范围为0〜255,缺省值为1 VARCHAR: 表示一个可变长度字符串,范围（最大列长度）为0到65535 BINARY: 表示二进制字节字符串 VARBINARY: 表示可变长度的二进制字节字符串 TINYBLOB: 表示最大长度为255（28 - 1）个字节的blob列,在存储中，每个都使用一个字节长度的前缀，表示值中的字节数量 BLOB: 表示最大长度为65,535（216 - 1）个字节的 blob 列 MEDIUMBLOB: 表示最大长度为16,777,215（224 - 1）个字节的 blob 列 LONGBLOB: 表示最大长度为 4,294,967,295（232 - 1）个字节的 blob 列 TINYTEXT: 表示最大长度为 255（28 - 1）个字符的文本列 TEXT: 表示最大长度为 65,535（216 - 1）个字符的文本列 MEDIUMTEXT: 表示最大长度为 16,777,215（224 - 1）个字符的文本列 LONGTEXT: 表示最大长度为 4,294,967,295 或 4GB（232 - 1）个字符的文本列 ENUM: 表示一个列表中只有一个值的字符串对象 SET: 表示一个列表中具有零个或多个值的字符串对象，最多包含 64 个成员,SET 值在内部作为整数值存在 创建索引 12345678-- 创建CREATE [UNIQUE or FULLTEXT or...] INDEX index_name ON table_name column;CREATE UNIQUE INDEX top_sellers ON products_tbl product;-- 删除DROP INDEX index_name ON table_name;-- 重命名ALTER TABLE table_name DROP INDEX index_name, ADD INDEX new_index_name; 序列 1234-- 创建create sequence seq_int;select nextval(seq_int);alter sequence seq_int restart 1;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"数据库","slug":"数据库","permalink":"https://me.ehoac.cn:10443/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"c 语言基础知识记录","slug":"c-lang-note","date":"2020-07-04T14:28:11.000Z","updated":"2023-08-24T00:56:01.777Z","comments":true,"path":"2020/07/04/c-lang-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/07/04/c-lang-note/","excerpt":"数据类型 c 有多种数据类型，基本数据类型分为两大类，整数类型和浮点数类型，通过为类型分配的储存量以及是有符号还是无符号区分不同的整数类型。可以使用unsigned创建无符号类型。_Bool是一种无符号类型，可储存0或1，分别代表false和true。 整数可以表示为十进制、八进制（ 0前缀）、十六进制（0x前缀）。 l或L后缀表示该值是long类型。","text":"数据类型 c 有多种数据类型，基本数据类型分为两大类，整数类型和浮点数类型，通过为类型分配的储存量以及是有符号还是无符号区分不同的整数类型。可以使用unsigned创建无符号类型。_Bool是一种无符号类型，可储存0或1，分别代表false和true。 整数可以表示为十进制、八进制（ 0前缀）、十六进制（0x前缀）。 l或L后缀表示该值是long类型。 printf() 转换说明 转换说明 输出 %a 浮点数、十六进制数和 p 记数法 %A 浮点数、十六进制数和 p 记数法 %c 单个字符 %d 有符号十进制整数 %e 浮点数，e 记数法 %E 浮点数，e 记数法 %f 浮点数，十进制记数法 %g 根据不同的值，自动选择%f 或%e，%e 格式用于指数小于-4 或者大于或等于精度时 %G 根据不同的值，自动选择%f 或%E，%E 格式用于指数小于-4 或者大于或等于精度时 %i 有符号十进制数（与%d 相同） %o 无符号八进制数 %p 指针 %s 字符串 %u 无符号十进制整数 %x 无符号十六进制整数，使用十六进制数 0f %X 无符号十六进制整数，使用十六进制数 0F %% 打印一个百分号 字符串 一系列被视为一个处理单元的字符。在 c 语言中，字符串是以空字符结尾的一系列字符，可以把字符串储存在字符数组中。数组是一系列同类型项或元素","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"c 语言","slug":"c-语言","permalink":"https://me.ehoac.cn:10443/tags/c-%E8%AF%AD%E8%A8%80/"}]},{"title":"oracle 笔记","slug":"oracle-note","date":"2020-06-04T01:34:56.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2020/06/04/oracle-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/06/04/oracle-note/","excerpt":"表结构修改 增加字段 1ALTER TABLE TABLE_NAME ADD(COLUMN_NAME NUMBER(38,0) NOT NULL);","text":"表结构修改 增加字段 1ALTER TABLE TABLE_NAME ADD(COLUMN_NAME NUMBER(38,0) NOT NULL); 修改列名 1ALTER TABLE TABLE_NAME RENAME COLUMN COLUMN_NAME TO NEW_COLUMN_NAME 修改列 1ALTER TABLE TABLE_NAME MODIFY (COLUMN_NAME VARCHAR2(10)) 删除列 1ALTER TABLE TABLE_NAME DROP COLUMN COLUMN_NAME 修改表名 1ALTER TABLE TABLE_NAME RENAME TO NEW_TABLE_NAME 注释 12COMMENT ON TABLE TABLE_NAME IS &#x27;注释内容&#x27;;COMMENT ON COLUMN TABLE_NAME.COLUMN_NAME IS &#x27;注释内容&#x27;; 增、删、改、查 1 存储过程 定义： 存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL 语句集，存储在数据库中，经过第一次编译后再次调用不需要再次编译，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来调用存储过程。 优点 效率高 降低网络流量 复用性高 可维护性高 安全性高 结构 过程声明，执行过程部分，存储过程异常 无参： 1234567CREATE OR REPLACE PROCEDURE demo AS/IS 变量2 DATE; 变量3 NUMBER;BEGIN -- 要处理的业务逻辑 EXCEPTION --存储过程异常END 有参： 1234567CREATE OR REPLACE PROCEDURE 存储过程名称(param1 student.id%TYPE)AS/ISname student.name%TYPE;age number :=20;BEGIN -- 业务处理.....END 存储函数 触发器 视图 大字段 序列","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"数据库","slug":"数据库","permalink":"https://me.ehoac.cn:10443/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"oracle","slug":"oracle","permalink":"https://me.ehoac.cn:10443/tags/oracle/"}]},{"title":"windows 中 debian 使用记录","slug":"wsl-debian-record","date":"2020-05-08T01:10:29.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2020/05/08/wsl-debian-record/","link":"","permalink":"https://me.ehoac.cn:10443/2020/05/08/wsl-debian-record/","excerpt":"国内程序源 兰州大学镜像站 123456789deb http://mirror.lzu.edu.cn/debian stable main contrib non-freedeb http://mirror.lzu.edu.cn/debian stable-updates main contrib non-freedeb http://mirror.lzu.edu.cn/debian/ buster-backports main contrib non-freedeb http://mirror.lzu.edu.cn/debian-security/ buster/updates main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian stable main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian stable-updates main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian/ buster-backports main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian-security/ buster/updates main contrib non-free","text":"国内程序源 兰州大学镜像站 123456789deb http://mirror.lzu.edu.cn/debian stable main contrib non-freedeb http://mirror.lzu.edu.cn/debian stable-updates main contrib non-freedeb http://mirror.lzu.edu.cn/debian/ buster-backports main contrib non-freedeb http://mirror.lzu.edu.cn/debian-security/ buster/updates main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian stable main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian stable-updates main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian/ buster-backports main contrib non-freedeb-src http://mirror.lzu.edu.cn/debian-security/ buster/updates main contrib non-free ssh 12sudo apt-get install openssh-server #安装sshsudo service ssh --full-restart #完整启动 ssh service 配置文件：/etc/ssh/sshd_config 12#PasswordAuthentication yes#PermitRootLogin yes 网络工具 12sudo apt install net-tools # 安装网络工具ifconfig #查看ip 子系统 ssh 开机自动启动 1234561. win+r 输入 shell:startup 进入启动目录2. 增加startservice.vbs启动程序, 重启或者直接命令行执行测试 ```vbs Set ws = CreateObject(&quot;Wscript.Shell&quot;) ws.run &quot;wsl -d debian -u root service ssh --full-restart&quot;, vbhide ```","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://me.ehoac.cn:10443/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"debian","slug":"debian","permalink":"https://me.ehoac.cn:10443/tags/debian/"}]},{"title":"RESTful 设计","slug":"RESTful-design","date":"2020-04-08T02:39:57.000Z","updated":"2022-12-07T02:15:44.259Z","comments":true,"path":"2020/04/08/RESTful-design/","link":"","permalink":"https://me.ehoac.cn:10443/2020/04/08/RESTful-design/","excerpt":"","text":"","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"api","slug":"api","permalink":"https://me.ehoac.cn:10443/tags/api/"},{"name":"restful","slug":"restful","permalink":"https://me.ehoac.cn:10443/tags/restful/"}]},{"title":"css 样式表属性与示例记录","slug":"css-style-sheets","date":"2020-04-04T09:20:57.000Z","updated":"2023-08-24T00:56:07.508Z","comments":true,"path":"2020/04/04/css-style-sheets/","link":"","permalink":"https://me.ehoac.cn:10443/2020/04/04/css-style-sheets/","excerpt":"常用样式 垂直居中 第一 1234selector: &#123; display: inline-block; vertical-align: middle;&#125;","text":"常用样式 垂直居中 第一 1234selector: &#123; display: inline-block; vertical-align: middle;&#125; 第二 1234567parent: &#123; display: flex;&#125;children: &#123; align-self: center;&#125; 第三 1234567parent: &#123; height: 300px;&#125;children: &#123; line-height: 300px;&#125; 样式重置 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697@chaset utf-8;html &#123; color: #000; background: #fff; font-family: &quot;Microsoft YaHei&quot;, sans-serif, Arial;&#125;body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,button,textarea,p,blockquote,th,td,strong &#123; padding: 0; margin: 0; font-family: &quot;Microsoft YaHei&quot;, sans-serif, Arial;&#125;table &#123; boder-collapse: collapse; border-spacing: 0;&#125;img &#123; border: 0;&#125;a &#123; text-decoration: none; color: #333; outline: none;&#125;a:hover &#123; text-decoration: underline;&#125;var,em,strong &#123; font-style: normal;&#125;em,strong,th,var &#123; font-style: inherit; font-weight: inherit;&#125;li &#123; list-style: none;&#125;caption,th &#123; text-align: left;&#125;h1,h2,h3,h4,h5,h6 &#123; font-size: 100%; font-weight: normal;&#125;input,button,textarea,select,optgroup,option &#123; font-family: inherit; font-size: inherit; font-style: inherit; font-weight: inherit;&#125;input,button,textarea,select &#123; *font-size: 100%;&#125; css 书写规范 书写顺序 Positioning Model 布局方式、位置，相关属性包括：position, top, z-index, display, float 等 Box Model 盒模型，相关属性包括：width, height, padding, margin, border, overflow 等 Typographic 文本排版，相关属性包括：font, line-height, letter-spacing, color- text-align 等 Visual 视觉外观，相关属性包括：color, background, list-style, transform, animation 等 推荐顺序： display position position 相关的 left top right bottom z-index float clear width height margin padding border background color font text-decoration text-align vertical-align white-align text-XXXX(text 的其它属性) CSS3 类 书写规范 使用 CSS 缩写属性 CSS 有些属性是可以缩写的，比如 padding,margin,font 等等，这样精简代码同时又能提高用户的阅读体验。可缩写的属性中，如果属性值只有 1 个或 2 个，那应该分开写；如果大于 2 个，应该合并写在一起。这样就可以使其编译的时间最优化。 去掉小数点前的“0”和 0 后面的单位，如：0px -&gt; 0 16 进制颜色代码缩写 命名规则 分类式命名法 布局（grid）（.g-）：将页面分割为几个大块，通常有头部、主体、主栏、侧栏、尾部等！ 模块（module）（.m-）：通常是一个语义化的可以重复使用的较大的整体！比如导航、登录、注册等 元件（unit）（.u-）：通常是一个不可再分的较为小巧的个体，通常被重复用于各种模块中！比如按钮、输 入框、loading 等！ 功能（function）（.f-）：为方便一些常用样式的使用，我们将这些使用率较高的样式剥离出来，按需使用，通常这些选择器具有固定样式表现，比如清除浮动等！不可滥用！ 状态（.z-）：为状态类样式加入前缀，统一标识，方便识别，她只能组合使用或作为后代出现（.u-ipt.z-dis{}，.m-list li.z-sel{}） javascript(.j-)：.j-将被专用于 JS 获取节点，请勿使用.j-定义样式 不要使用 &quot; _ &quot; 下划线来命名 css id 采用驼峰式命名(不要乱用 id) scss 中的变量、函数、混合、placeholder 采用驼峰式命名 相同语义的不同类命名方法：直接加数字或字母区分即可（如：.m-list、.m-list2、.m-list3 等，都是列表模块，但是是完全不一样的模块）。其他举例：.f-fw0、.f-fw1、.s-fc0、.s-fc1、.m-logo2、.m-logo3、u-btn、u-btn2 等等。 命名方式(BEM)：类-体（例：g-head）、类-体-修饰符（例：u-btn-active） 后代选择器：体-修饰符即可（例：.m-page .cut{}）注：后代选择器不要在页面布局中使用，因为污染的可能性较大； 简写命名 举例 1234567891011121314151617181920 /* 这是某个模块 */.m-nav&#123;&#125;/* 模块容器 */.m-nav li,.m-nav a&#123;&#125;/* 先共性 优化组合 */.m-nav li&#123;&#125;/* 后个性 语义化标签选择器 */.m-nav a&#123;&#125;/* 后个性中的共性 按结构顺序 */.m-nav a.a1&#123;&#125;/* 后个性中的个性 */.m-nav a.a2&#123;&#125;/* 后个性中的个性 */.m-nav .z-crt a&#123;&#125;/* 交互状态变化 */.m-nav .z-crt a.a1&#123;&#125;.m-nav .z-crt a.a2&#123;&#125;.m-nav .btn&#123;&#125;/* 典型后代选择器 */.m-nav .btn-1&#123;&#125;/* 典型后代选择器扩展 */.m-nav .btn-dis&#123;&#125;/* 典型后代选择器扩展（状态） */.m-nav .btn.z-dis&#123;&#125;/* 作用同上，请二选一（如果可以不兼容IE6时使用） */.m-nav .m-sch&#123;&#125;/* 控制内部其他模块位置 */.m-nav .u-sel&#123;&#125;/* 控制内部其他元件位置 */.m-nav-1&#123;&#125;/* 模块扩展 */.m-nav-1 li&#123;&#125;.m-nav-dis&#123;&#125;/* 模块扩展（状态） */.m-nav.z-dis&#123;&#125;/* 作用同上，请二选一（如果可以不兼容IE6时使用） */ 布局(.g-) 语义 命名 简写 文档 doc doc 头部 head hd 主体 body bd 尾部 foot ft 主栏 main mn 主栏子容器 mainc mnc 侧栏 side sd 侧栏子容器 sidec sdc 盒容器 wrap/box wrap/box 模块（.m-）、元件（.u-） 语义 命名 简写 导航 nav nav 子导航 subnav snav 面包屑 crumb crm 菜单 menu menu 选项卡 tab tab 标题区 head/title hd/tt 内容区 body/content bd/ct 列表 list lst 表格 table tb 表单 form fm 热点 hot hot 排行 top top 登录 login log 标志 logo logo 广告 advertise ad 搜索 search sch 幻灯 slide sld 提示 tips tips 帮助 help help 新闻 news news 下载 download dld 注册 regist reg 投票 vote vote 版权 vcopyright cprt 结果 result rst 标题 title tt 按钮 button btn 输入 input ipt 功能（.f-） 语义 命名 简写 清除浮动 clearboth cb 左浮动 floatleft fl 内联 inlineblock ib 文本居中 textaligncenter tac 垂直居中 verticalalignmiddle vam 溢出隐藏 overflowhidden oh 完全消失 displaynone dn 字体大小 fontsize fz 字体粗细 fontweight fs 皮肤（.s-） 语义 命名 简写 字体颜色 fontcolor fc 背景颜色 backgroundcolor bgc 边框颜色 bordercolor bdc 状态(.z-) 语义 命名 简写 选中 selected sel 当前 curren crt 显示 show show 隐藏 hide hide 打开 open open 关闭 close close 出错 error err 不可用 disabled dis 概念 属性：css 的称谓 值：属性的值，整数值、数值、百分比、长度值、颜色值、字符串值、位置值等 关键字：css 中关键单词 变量： 长度单位：px、em、ex、rem、ch、vh、vw、pt、cm、mm、pc；&lt;number&gt; + 长度单位 = &lt;length&gt; 功能符：值以函数的形式指定，rgba()、url()、calc(); 属性值：属性冒号后的内容 声明：属性名 + 属性值 声明块：花括号包裹的一系列声明 规则或规则集： 选择器：用来选取目标元素 类选择器：. ID 选择器：# 属性选择器：[] 伪类选择器：: 伪元素选择器：:: 关系选择器：根据与其他元素的关系选择元素的选择器 后代选择器：空格 相邻后代选择器：&gt; 兄弟选择器：~ 相邻兄弟选择器：+ @规则：以@字符开始的一些规则 其它 块级元素：block-level element 具有换行特性 内联元素：inline-level element 替换元素：通过修改某个属性值呈现的内容可被替换的元素 属性参考 兼容性 通用： attr Safri 或 Chrome： -webkit-attr Firefox：-moz-attr Opera：-o-attr 属性值类型 string：字符串 number：数值 hex：十进制数字 rgb：rgb 代码 time：时间 length: 长度 %：百分比 angle: 角度 url：图片路径 flex 容器的属性 flex-direction: row | row-reverse | column | column-reverse; 决定主轴的方向 flex-wrap: nowrap | wrap | wrap-reverse; 如何换行 flex-flow: [flex-direction flex-wrap] flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap justify-content: flex-start | flex-end | center | space-between | space-around; 主轴上的对齐方式 align-items: flex-start | flex-end | center | baseline | stretch; 交叉轴上如何对齐 align-content: flex-start | flex-end | center | space-between | space-around | stretch; 多根轴线的对齐方式 如果项目只有一根轴线，该属性不起作用 项目的属性 order: number; 项目的排列顺序 数值越小，排列越靠前 flex-grow: number; 项目的放大比例 flex-shrink: number; 项目的缩小比例 flex-basis: length | auto; 在分配多余空间之前，项目占据的主轴空间（main size） flex: [flex-grow flex-shrink flex-basis] | none; flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto 快捷值：auto (1 1 auto) 和 none (0 0 auto)。 align-self: auto | flex-start | flex-end | center | baseline | stretch; 允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性 动画属性 1234567891011121314151617div &#123; width: 100px; height: 100px; background: blue; position: relative; animation: keymove 5s infinite; -webkit-animation: keymove 5s infinite;&#125;＠keyframes keymove &#123; from &#123; top: 0px; &#125; to &#123; top: 200px; &#125;&#125; @keyframes animationname &#123;[from &#123;&#125;, to &#123;&#125;]|[0% &#123;&#125; - 100% &#123;&#125;]&#125; animation name duration timing-function delay iteration-count; animation-name: string | none; animation-duration: time; animation-timing-function: linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier(n, n, n, n); animation-delay: time; animation-iteration-count: number | infinite; animation-direction: normal | alternae; animation-play-state: paused | running; animation-fill-mode: none | forwards | backwards | both; 背景属性 1background: #000000 url(example.gif) repeat-x fixed top; background: color image repeat position attachment background-color: string | hex | rgb | transparent | inherit; background-image: url() | inherit | none; background-repeat: repeat | repeat-x | repeat-y | no-repeat | inherit; background-position: [top | center | bottom left | center | right] | [x% y%] | [xpos ypos] background-attachment: scroll | fixed | inherit; background-clip: border-box | padding-box | content-box; background-origin: border-box | padding-box | content-box; background-size: [width | auto height | auto] | [percentage-width | auto percentage-height | auto] | cover | contain 边框属性 1border: 1px solid red; border: width style color; border-width: thin | medium | thick | length | inherit; border-style: none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset | inherit; border-color: string | hex | rgb | transparent | inherit; 以上属性均可分别设置 top right bottom left 各边的属性值 例如：border-width: top-width right-width bottom-width left-width; border-top-*, border-right-*, border-bottom-*, border-left-* 分别控制各边的以上属性 1border-radius: 2em; border-radius: length | % 可通过 border-top-left-radius,border-top-right-radius,border-bottom-right-radius,border-bottom-left-radius 分别控制各角的圆角值 1border-image: url(sample.png) 30 30 round; border-image: image slice width outset repeat border-image-source: image | none; border-image-slice: number | % | fill; border-image-width: number | % | auto; border-image-outset: length | number; border-image-repeat: stretch | repeat | round; 1box-shadow: 10px 10px 5px #000000; box-shadow: h-shadow v-shadow blur spread color inset 1outline: #000000 dotted thick; outline: color style width border-color: string | hex | rgb | invert | inherit; border-style: none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset | inherit; border-width: thin | medium | thick | length | inherit; box 属性 1234div &#123; overflow: auto; overflow-style: marquee, panner;&#125; overflow: x &amp; y overflow-x: visible | hidden | scroll | auto | no-display | no-content; overflow-y: visible | hidden | scroll | auto | no-display | no-content; overflow-style: auto | scrollbar | panner | move | marquee; 1234div &#123; rotation-point: 50% 50%; rotation: 180deg;&#125; rotation-point: [left top] | [left center] | [left bottom] | [right top] | [right center] | [right bottom] | [center top] | [center center] | [center bottom] | [x% y%] rotation: angle color 属性 123div &#123; opacity: 0.5;&#125; opacity: value | inherit color-profile: rendering-intent: 尺寸属性 12345678div &#123; width: 100px; height: 100px; max-width: 200px; min-width: 20px; max-height: 200px; min-height: 20px;&#125; width | heigh：auto | length | % | inherit; max-*：none | length | % | inherit; min-* : length | % | inherit; 字体属性 123div &#123; font: italic bold 12px/20px arial, sans-serif;&#125; font: style variant weight size/line-height family; font-sytle: normal | italic | oblique | inherit; font-variant: normal | small-caps | inherit; font-weight: normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit; font-size: xx-small | x-small | small | medium | large | x-large | xx-large | smaller | larger | length | % | inherit; line-height: font-family: [family-name generic-family] | inherit; 通用字体 Serif 这些字体成比例，而且有上下短线。如果字体中的所有字符根据其不同大小有不同的宽度，则成该字符是成比例的。例如，小写 i 和小写 m 的宽度就不同。上下短线是每个字符笔划末端的装饰，比如小写 l 顶部和底部的短线，或大写 A 两条腿底部的短线。Serif 字体的例子包括 Times、Georgia 和 New Century Schoolbook。 Sans-serif 这些字体是成比例的，而且没有上下短线。Sans-serif 字体的例子包括 Helvetica、Geneva、Verdana、Arial 或 Univers。 Monospace Monospace 字体并不是成比例的。它们通常用于模拟打字机打出的文本、老式点阵打印机的输出，甚至更老式的视频显示终端。采用这些字体，每个字符的宽度都必须完全相同，所以小写的 i 和小写的 m 有相同的宽度。这些字体可能有上下短线，也可能没有。如果一个字体的字符宽度完全相同，则归类为 Monospace 字体，而不论是否有上下短线。Monospace 字体的例子包括 Courier、Courier New 和 Andale Mono。 Curslve 这些字体试图模仿人的手写体。通常，它们主要由曲线和 Serif 字体中没有的笔划装饰组成。例如，大写 A 再其左腿底部可能有一个小弯，或者完全由花体部分和小的弯曲部分组成。Cursive 字体的例子包括 Zapf Chancery、Author 和 Comic Sans。 Fantasy 这些字体无法用任何特征来定义，只有一点是确定的，那就是我们无法很容易地将其规划到任何一种其他的字体系列当中。这样的字体包括 Western、Woodblock 和 Klingon。 特定字体 Times Verdana Helvetica Arial font-size-adjust: none | number; font-stretch: normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded; font-variant: normal | small-caps | inherit; 内容生成 123456789101112131415161718192021a:after &#123; content: &quot; (&quot; attr(href) &quot;)&quot;;&#125;body &#123; counter-reset: section;&#125;h1 &#123; counter-reset: subsection;&#125;h1:before &#123; content: &quot;Section &quot; counter(section) &quot;. &quot;; counter-increment: section;&#125;h2:before &#123; counter-increment: subsection; content: counter(section) &quot;.&quot; counter(subsection) &quot; &quot;;&#125; content: none | normal | content specifications | inherit; counter-increment: none | number | inherit; counter-reset: none | number | inherit; 123q:lang(en) &#123; quotes: &#x27;&quot;&#x27; &#x27;&quot;&#x27; &quot;&#x27;&quot; &quot;&#x27;&quot;;&#125; quotes: none | [string string string string] | inherit; 显示 代码 &quot; &amp;#34; ’ &amp;#39; &lt; &amp;#8249; &gt; &amp;#8250; « &amp;#171; » &amp;#187; ‘ &amp;#8216; ’ &amp;#8217; “ &amp;#8220; ” &amp;#8221; „ &amp;#8222; crop: move-to: page-policy: 列表属性 123ul &#123; list-style: square inside url(&quot;exmaple.png&quot;);&#125; list-style: type position image list-style-type: disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | none | inherit; list-style-position: inside | outside | inherit; list-style-image: url | none | inherit; marker-offset: 外边距属性 1margin: 2cm 4cm 3cm 4cm; margin: top right bottom left; margin-top | magin-right | margin-bottom | margin-left: auto | length | % | inherit; marquee 属性 1 marquee-direction marquee-play-count marquee-speed marquee-style 多列属性 12345div &#123; columns: 100px 3; -moz-columns: 100px 3; -webkit-columns: 100px 3;&#125; columns: width count column-width: auto | length; column-count: number | auto; column-fill: balance | auto; column-gap: length | normal; column-span: 1 | all; column-rule: width style color; column-rule-width: thin | medium | thick | length; column-rule-style: none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset; column-rule-color: color; 内边距属性 1padding: 2cm 4cm 3cm 4cm; padding: top right bottom left; padding-top | padding-right | padding-bottom | padding-left: auto | length | % | inherit; 定位属性 123456789101112131415161718h2 &#123; position: absolute; top: 100px; left: 100px; clip: rect(0px, 60px, 200px, 0px); z-index: -1;&#125;img &#123; float: right; clear: both;&#125;div &#123; width: 100px; height: 100px; overflow: scroll;&#125; position: absolute | fixed | relative | static | inherit; top: auto | % | length | inherit; right: auto | % | length | inherit; bottom: auto | % | length | inherit; left: auto | % | length | inherit; clip: rect(top, right, bottom, left) | auto | inherit; z-index: auto | number | inherit; float: left | right | none | inherit; clear: left | right | both | none | inherit; cursor: url | default | auto | crosshair | pointer | move | e-resize | nw-resize | ne-resize | n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help; display: none | block | inline | inline-block | list-item | run-in | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | inherit; overflow: visible | hidden | scroll | auto | inherit; vertical-align: baseline | sub | super | top | text-top | middle | bottom | text-bottom | length | % | inherit; visibility: visible | hidden | collapse | inherit; 打印属性 1234567@media print &#123; table &#123; page-break-before: always; page-break-inside: avoid; page-break-after: always; &#125;&#125; page-break-before: auto | always | avoid | left | right | inherit; page-break-inside: auto | avoid | inherit; orphans widows 表格属性 12345678910table &#123; table-layout: fixed; border-collapse: separate; border-spacing: 10px 50px; empty-cells: hide;&#125;caption &#123; caption-side: bottom;&#125; table-layout: automatic | fixed | inherit; border-collapse: separate | collapse | inherit; empty-cells: hide | show | inherit; 仅用于分离边框模式（border-collapse: separate;） border-spacing: [length length] | inherit; caption-side: top | bottom | inherit; 文本属性 1234567891011121314151617p &#123; color: #00ff00; direction: rtl; letter-spacing: -3px; line-height: 90%; text-align: center; text-decoration: underline; text-indent: 20px; text-transform: capitalize; unicode-bidi: embed; white-space: nowrap; word-spacing: 25px; text-overflow: ellipsis; text-shadow: 5px 5px 5px #ff0000; word-break: hyphenate; word-wrap: break-word;&#125; color: string | hex | rgb | inherit; direction: ltr | rtl | inherit; letter-spacing: normal | length | inherit; line-height: normal | number | length | % | inherit; text-align: left | right | center | justify | inherit; text-decoration: none | underline | overline | line-through | blink | inheit; text-indent: length | % | inherit; text-transform: none | capitalize | uppercase | lowercase | inherit; unicode-bidi: normal | embed | bidi-override; white-space: normal | pre | nowrap | pre-wrap | pre-line | inherit; word-spacing: normal | length | inherit; text-overflow: clip | ellipsis | string; text-shadow: [h-shadow v-shadow blur color]; word-break: normal | break-all | keep-all; word-wrap: normal | break-word; hanging-punctuation: punctuation-trim: text-align-last: text-emphasis: text-justify: text-outline: text-wrap: 2d/3d 转换属性 123456789101112131415161718div &#123; transform: rotate(7deg); transform-origin: 20% 40%; transform-style: preserve-3d; -ms-transform: rotate(7deg); /* IE 9 */ -ms-transform-origin: 20% 40%; /* IE 9 */ -moz-transform: rotate(7deg); /* Firefox */ -moz-transform-orign: 20% 40%; /* Firefox */ -webkit-transform: rotate(7deg); /* Safari &amp; Chrome */ -webkit-transform-origin: 20% 40%; /* Safari &amp; Chrome */ -webkit-transform-style: preserve-3d; -o-transform: rotate(7deg); /* Opera */ -o-transform-origin: 20% 40%; /* Opera */&#125; transform: none | transform-function; 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。 transform-origin: [x-axis y-axis z-axis]; transform-style: flat | preserve-3d; transform-function: 值 描述 none 定义不进行转换。 matrix(n,n,n,n,n,n) 定义 2D 转换，使用六个值的矩阵。 matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n) 定义 3D 转换，使用 16 个值的 4x4 矩阵。 translate(x,y) 定义 2D 转换。 translate3d(x,y,z) 定义 3D 转换。 translateX(x) 定义转换，只是用 X 轴的值。 translateY(y) 定义转换，只是用 Y 轴的值。 translateZ(z) 定义 3D 转换，只是用 Z 轴的值。 scale(x,y) 定义 2D 缩放转换。 scale3d(x,y,z) 定义 3D 缩放转换。 scaleX(x) 通过设置 X 轴的值来定义缩放转换。 scaleY(y) 通过设置 Y 轴的值来定义缩放转换。 scaleZ(z) 通过设置 Z 轴的值来定义 3D 缩放转换。 rotate(angle) 定义 2D 旋转，在参数中规定角度。 rotate3d(x,y,z,angle) 定义 3D 旋转。 rotateX(angle) 定义沿着 X 轴的 3D 旋转。 rotateY(angle) 定义沿着 Y 轴的 3D 旋转。 rotateZ(angle) 定义沿着 Z 轴的 3D 旋转。 skew(x-angle,y-angle) 定义沿着 X 和 Y 轴的 2D 倾斜转换。 skewX(angle) 定义沿着 X 轴的 2D 倾斜转换。 skewY(angle) 定义沿着 Y 轴的 2D 倾斜转换。 perspective(n) 为 3D 转换元素定义透视视图。 123456div &#123; perspective: 500; perspective-origin: 10% 10%; -webkit-perspective: 500; /* Safari &amp; Chrome */ -webkit-perspective-origin: 10% 10%;&#125; perspective: number | none; perspective: [x-axis y-axis]; x-axis: left | center | right | length | %; y-axis: top | center | bottom | length | %; 123456div &#123; backface-visibility: hidden; -webkit-backface-visibility: hidden; -moz-backface-visibility: hidden; -ms-backface-visibility: hidden;&#125; backface: visible | hidden; 过渡属性 1234567div &#123; width: 100px; transition: width 2s; -moz-transition: width 2s; -webkit-transition: 2s; -o-transition: width 2s;&#125; transition: property duration timing-function delay; transition-property: none | all | property; transition-duration: time; transition-timing-function: linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier(n, n, n, n) transition-delay: time; 不常用的属性 flexible box 可伸缩框属性 12345678box-alignbox-directionbox-flexbox-flex-groupbox-linesbox-ordinal-groupbox-orientbox-pack content for paged media 属性 12345678910111213bookmark-labelbookmark-levelbookmark-targetfloat-offsethyphenate-afterhyphenate-beforehyphenate-characterhyphenate-lineshyphenate-resourcehyphensimage-resolutionmarksstring-set grid 属性 12grid-cloumnsgrid-rows hyperlink 属性 1234targettarget-nametarget-newtarget-position paged media 属性 12345fitfit-positionimage-orientationpagesize 用户界面属性 12345678910appearancebox-sizingiconnav-downnav-indexnav-leftnav-rightnav-upoutline-offsetresize","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"css","slug":"css","permalink":"https://me.ehoac.cn:10443/tags/css/"}]},{"title":"redis 笔记","slug":"redis-note","date":"2020-03-31T13:51:22.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2020/03/31/redis-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/03/31/redis-note/","excerpt":"安装 12sudo apt-get updatesudo apt-get install redis-server","text":"安装 12sudo apt-get updatesudo apt-get install redis-server 查看 12ps -ef | grep redisredis-cli 配置 sudo vim /etc/redis/redis.conf 1234567..............# bind 127.0.0.1 ::1bind 0.0.0.0............................requirepass xxxxx.............. 12service redis-server restart 基本数据结构 String 字符串 set key value get key del key Hash 散列 hmset entity key value [key value] hget entity key del entity List 列表 lpush list value lrange list begin end del list Set 集合 sadd set value smembers set del set Sorted Set 有序集合 zadd sset index value zrangebyscore sset begin end del sset 配置 dbfilename dump.rdb 指定本地数据库文件名，默认值为 dump.rdb dir ./ 指定本地数据库存放目录 requirepass foobared 设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 AUTH 命令提供密码，默认关闭 appendonly no 指定是否在每次更新操作后进行日志记录，Redis 在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis 本身同步数据文件是按 save 条件来同步的，所以有的数据会在一段时间内只存在于内存中。 appendfilename appendonly.aof 指定更新日志文件名，默认为 appendonly.aof appendfsync everysec 指定更新日志条件，共有 3 个可选值： no：表示等操作系统进行数据缓存同步到磁盘（快） always：表示每次更新操作后手动调用 fsync() 将数据写到磁盘（慢，安全） everysec：表示每秒同步一次（折中，默认值） vm-enabled no 是否启用虚拟内存机制，默认值为 no VM 机制将数据分页存放，由 Redis 将访问量较少的页即冷数据 swap 到磁盘上，访问多的页面由磁盘自动换出到内存中 vm-swap-file /tmp/redis.swap 虚拟内存文件路径，默认值为 /tmp/redis.swap，不可多个 Redis 实例共享","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"缓存","slug":"缓存","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%93%E5%AD%98/"},{"name":"redis","slug":"redis","permalink":"https://me.ehoac.cn:10443/tags/redis/"}]},{"title":"debian 操作系统使用记录","slug":"debian-use","date":"2020-03-21T06:11:28.000Z","updated":"2023-05-30T02:19:56.515Z","comments":true,"path":"2020/03/21/debian-use/","link":"","permalink":"https://me.ehoac.cn:10443/2020/03/21/debian-use/","excerpt":"防火墙 UFW 安装防火墙 1sudo apt install ufw","text":"防火墙 UFW 安装防火墙 1sudo apt install ufw 支持 IPv6 sudo vim /etc/default/ufw 123...IPV6=yes... 默认策略 12sudo ufw default deny incomingsudo ufw default allow outgoing 开放端口 1sudo ufw allow port 启用 UFW 12345sudo ufw enablesudo ufw disablesudo ufw reset 子网访问 123sudo ufw allow from 192.168.249.0/24sudo ufw allow from 192.168.249.0/24 to any port 22 删除规则 123456sudo ufw status numberedsudo ufw status verbosesudo ufw delete numbersudo ufw delete allow httpsudo ufw delete allow 80 systemctl 服务 开机没有登录时，即可运行的程序 service 文件位置 1/lib/systemd/system/ service 文件内容 1234567891011121314[Unit]Description=descAfter=network.target[Service]Type=forkingExecStart=/usr/local/nginx/sbin/nginc -c /usr/local/nginx/conf/nginx.confExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s quit# 为服务分配独立的空间PrivateTmp=true[Install]WantedBy=multi-user.target 查看已启动的服务 1systemctl list-units --type=service No protocol specified Unable to init server: 无法连接：拒绝连接 当前用户执行命令 1xhost + user 不在 sudoers 文件中。此事将被报告。 1234567sudo vim /etc/sudoers...# User privilege specificationroot ALL=(ALL:ALL) ALLuser ALL=(ALL:ALL) ALL...","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://me.ehoac.cn:10443/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"debian","slug":"debian","permalink":"https://me.ehoac.cn:10443/tags/debian/"}]},{"title":"Python 记录","slug":"python-Note","date":"2020-03-01T04:10:11.000Z","updated":"2022-12-07T02:15:44.260Z","comments":true,"path":"2020/03/01/python-Note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/03/01/python-Note/","excerpt":"创建虚拟环境 12345pip install virtualenv# 打开cmd,进入项目目录virtualenv .venv -p &quot;F:\\software\\python37\\python.exe&quot;","text":"创建虚拟环境 12345pip install virtualenv# 打开cmd,进入项目目录virtualenv .venv -p &quot;F:\\software\\python37\\python.exe&quot; vscode settings.json 123&#123; &quot;python.pythonPath&quot;: &quot;F:\\\\workspace\\\\python\\\\tkcp\\\\.venv\\\\Scripts\\\\python.exe&quot;&#125; 运行 debug 窗口,创建 lanch.json 12345678910111213141516171819202122&#123; // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;Main Program&quot;, &quot;type&quot;: &quot;python&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;\\\\src\\\\main.py&quot;, &quot;console&quot;: &quot;integratedTerminal&quot; &#125;, &#123; &quot;name&quot;: &quot;Current File&quot;, &quot;type&quot;: &quot;python&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;file&#125;&quot;, &quot;console&quot;: &quot;integratedTerminal&quot; &#125; ]&#125;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"python","slug":"python","permalink":"https://me.ehoac.cn:10443/tags/python/"}]},{"title":"问题记录","slug":"question-record","date":"2020-02-29T13:44:59.000Z","updated":"2022-12-07T02:15:44.259Z","comments":true,"path":"2020/02/29/question-record/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/29/question-record/","excerpt":"JetBrains IDEA unable to import maven project see logs for details 1234idea14log: java.lang.RuntimeException: com.google.inject.CreationException: Unable to create injector, see the following errors 降低maven版本 3.3.9","text":"JetBrains IDEA unable to import maven project see logs for details 1234idea14log: java.lang.RuntimeException: com.google.inject.CreationException: Unable to create injector, see the following errors 降低maven版本 3.3.9 Unable to parse template “Class” Error message: This template did not produc File-&gt;Settings-&gt;Editor-&gt;Code Style-&gt;File and Code Templates-&gt;Templates 12345#if($&#123;PACKAGE_NAME&#125;&amp;&amp;$&#123;PACKAGE_NAME&#125;!=&quot;&quot;)package $&#123;PACKAGE_NAME&#125;;#end#parse(&quot;File Header.java&quot;)public class $&#123;NAME&#125; &#123;&#125; No JDK found. Please validate either IDEA_JDK, JDK_HOME or JAVA_HOME environment variable points to valid JDK installation. idea14 sudo vim /etc/enviroment 1JAVA_HOME=/usr/local/java/jdk1.8.0_25","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"问题记录","slug":"问题记录","permalink":"https://me.ehoac.cn:10443/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"}]},{"title":"mysql 安装配置记录","slug":"mysql-note","date":"2020-02-29T06:20:20.000Z","updated":"2023-05-30T02:27:30.361Z","comments":true,"path":"2020/02/29/mysql-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/29/mysql-note/","excerpt":"安装 123sudo apt-get updatesudo apt-get install mysql-server mysql8","text":"安装 123sudo apt-get updatesudo apt-get install mysql-server mysql8 12345sudo dpkg -i mysql-apt-config_0.8.15-1_all.debsudo apt updatesudo apt install mysql-servermysql –u root –p 创建用户数据库并分配权限 1234567mysql -u root -pcreate user &#x27;username&#x27;@&#x27;ip&#x27; identified by &#x27;password&#x27;;flush privileges;create database name character set utf8;grant all privileges on database.* to &#x27;username&#x27;@&#x27;ip&#x27;; 配置文件 sudo vim /etc/mysql/my.cnf 1# bind-address = 127.0.0.1 # 允许远程用户登录 错误 Access denied for user ‘root’@‘localhost’ ； sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 12[mysqld]skip-grant-tables 操作 123456mysql -u root -puse mysql;update user set authentication_string=&#x27;&#x27; where user=&#x27;root&#x27;;update user set plugin=&quot;mysql_native_password&quot; where user=&#x27;root&#x27;;flush privileges;quit; sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 12[mysqld]# skip-grant-tables 操作 1234service msqld restartmysql -u root -pALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"数据库","slug":"数据库","permalink":"https://me.ehoac.cn:10443/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"mysql","slug":"mysql","permalink":"https://me.ehoac.cn:10443/tags/mysql/"}]},{"title":"maven - java jar包仓库记录","slug":"maven-note","date":"2020-02-29T05:44:49.000Z","updated":"2023-05-30T02:27:02.317Z","comments":true,"path":"2020/02/29/maven-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/29/maven-note/","excerpt":"下载 下载 maven","text":"下载 下载 maven 配置环境变量 sudo vim /etc/profile 123export M2_HOME=/opt/maven/apache-maven-3.6.3export CLASSPATH=$CLASSPATH:$M2_HOME/libexport PATH=$PATH:$M2_HOME/bin 1source /etc/profile 查看版本 1mvn -v 配置阿里镜像 123456&lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;ali maven mirrors&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;&lt;/mirror&gt;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"maven","slug":"maven","permalink":"https://me.ehoac.cn:10443/tags/maven/"}]},{"title":"Java jdk 安排配置","slug":"Java-jdk","date":"2020-02-24T15:28:42.000Z","updated":"2023-05-30T02:22:06.916Z","comments":true,"path":"2020/02/24/Java-jdk/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/24/Java-jdk/","excerpt":"下载 下载 jdk8","text":"下载 下载 jdk8 解压 1sudo tar xvf jdk-8u25-linux-x64.tar.gz 环境变量 sudo vim ~/.bashrc 或 sudo vim /etc/profile 1234export JAVA_HOME=/usr/local/java/jdk1.8.0_25export JRE_HOME=$&#123;JAVA_HOME&#125;/jreexport CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/libexport PATH=$&#123;JAVA_HOME&#125;/bin:$PATH 配置生效 123source /etc/profilejava -version","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"java","slug":"java","permalink":"https://me.ehoac.cn:10443/tags/java/"}]},{"title":"Nginx 记录","slug":"nginx-note","date":"2020-02-24T12:37:21.000Z","updated":"2022-12-07T02:15:44.259Z","comments":true,"path":"2020/02/24/nginx-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/24/nginx-note/","excerpt":"install 123456789101112131415sudo wget http://nginx.org/download/nginx-1.16.1.tar.gzsudo tar -zxvf nginx-1.16.1.tar.gzsudo apt install build-essential libtool libpcre3 libpcre3-dev openssl libssl-dev zlib1g-devcd nginx-1.16.1sudo git clone git://github.com/yaoweibin/ngx_http_substitutions_filter_module.gitsudo ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --with-http_dav_module --with-http_stub_status_module --with-threads --with-file-aio --with-mail --with-mail_ssl_module --with-http_sub_module --add-module=ngx_http_substitutions_filter_modulesudo makesudo make install","text":"install 123456789101112131415sudo wget http://nginx.org/download/nginx-1.16.1.tar.gzsudo tar -zxvf nginx-1.16.1.tar.gzsudo apt install build-essential libtool libpcre3 libpcre3-dev openssl libssl-dev zlib1g-devcd nginx-1.16.1sudo git clone git://github.com/yaoweibin/ngx_http_substitutions_filter_module.gitsudo ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --with-http_dav_module --with-http_stub_status_module --with-threads --with-file-aio --with-mail --with-mail_ssl_module --with-http_sub_module --add-module=ngx_http_substitutions_filter_modulesudo makesudo make install info 12345678910111213nginx path prefix: &quot;/usr/local/nginx&quot;nginx binary file: &quot;/usr/local/nginx/sbin/nginx&quot;nginx modules path: &quot;/usr/local/nginx/modules&quot;nginx configuration prefix: &quot;/usr/local/nginx/conf&quot;nginx configuration file: &quot;/usr/local/nginx/conf/nginx.conf&quot;nginx pid file: &quot;/usr/local/nginx/logs/nginx.pid&quot;nginx error log file: &quot;/usr/local/nginx/logs/error.log&quot;nginx http access log file: &quot;/usr/local/nginx/logs/access.log&quot;nginx http client request body temporary files: &quot;client_body_temp&quot;nginx http proxy temporary files: &quot;proxy_temp&quot;nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;nginx http uwsgi temporary files: &quot;uwsgi_temp&quot;nginx http scgi temporary files: &quot;scgi_temp&quot; config 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#user nobody;worker_processes 4;#error_log logs/error.log;#error_log logs/error.log notice;#error_log logs/error.log info;#pid logs/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; server &#123; listen 443 ssl; #填写绑定证书的域名 server_name ehoac.cn; #网站主页路径。此路径仅供参考，具体请您按照实际目录操作。 root /home/ehoac/deploy/ehblog/public; index index.html index.htm; #证书文件名称 ssl_certificate 1_ehoac.cn_bundle.crt; #私钥文件名称 ssl_certificate_key 2_ehoac.cn.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location /wechat/ &#123; proxy_pass http://127.0.0.1:8080/web; proxy_redirect off; # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; server &#123; listen 80; #填写绑定证书的域名 server_name www.example.com; #把http的域名请求转成https return 301 https://$host$request_uri; &#125;&#125; path 1/usr/local/webserver/nginx stop 1sudo pkill -9 nginx check configure 1sudo /usr/local/webserver/nginx -t start 1sudo /usr/local/webserver/nginx/sbin/nginx -c /usr/local/webserver/nginx/conf/nginx.conf 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#!/bin/sh### BEGIN INIT INFO# Provides: nginx# Required-Start: $local_fs $remote_fs $network $syslog $named# Required-Stop: $local_fs $remote_fs $network $syslog $named# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: starts the nginx web server# Description: starts nginx using start-stop-daemon### END INIT INFONAME=nginxDAEMON=/usr/local/webserver/nginx/sbin/nginxDAEMON_OPTS=&quot;-c /usr/local/webserver/nginx/conf/nginx.conf&quot;PIDFILE=/var/run/nginx.pid[ -x &quot;$DAEMON&quot; ] || exit 0case &quot;$1&quot; in start) if [ -f $PIDFILE ]; then echo &quot;$NAME already running...&quot; echo -e &quot;\\033[1;35mStart Fail\\033[0m&quot; else echo &quot;Starting $NAME...&quot; start-stop-daemon -S -p $PIDFILE -m -b -o -q -x $DAEMON -- $DAEMON_OPTS || return 2 echo -e &quot;\\033[1;32mStart Success\\033[0m&quot; fi ;; stop) echo &quot;Stoping $NAME...&quot; start-stop-daemon -K -p $PIDFILE -s TERM -o -q || return 2 rm -rf $PIDFILE echo -e &quot;\\033[1;32mStop Success\\033[0m&quot; ;; restart) $0 stop &amp;&amp; sleep 2 &amp;&amp; $0 start ;; *) echo &quot;Usage: $0 &#123;start|stop|restart&#125;&quot; exit 1 ;;esacexit 0","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"nginx","slug":"nginx","permalink":"https://me.ehoac.cn:10443/tags/nginx/"}]},{"title":"Ubuntu 记录","slug":"ubuntu-note","date":"2020-02-24T12:33:00.000Z","updated":"2022-12-07T02:15:44.259Z","comments":true,"path":"2020/02/24/ubuntu-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/24/ubuntu-note/","excerpt":"apt sources.list 12sudo cp /etc/apt/sources.list /etc/apt/sources.list.baksudo gedit /etc/apt/sources.list","text":"apt sources.list 12sudo cp /etc/apt/sources.list /etc/apt/sources.list.baksudo gedit /etc/apt/sources.list mirrors 1234567891011121314151617181920deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse# deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse# deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse# deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse# deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse# deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse update 123sudo apt updatesudo apt-get upgradesudo apt autoremove zsh install 12345sudo apt install -y zshsh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;orsh -c &quot;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&quot; plugins download 123http://mimosa-pudica.net/zsh-incremental.htmlgit clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting configure 1234567891011121314151617bash:source incr*.zshfile: ~/.zshrcplugins=( git zsh-syntax-highlighting)source ~/.oh-my-zsh/plugins/incr/incr-*.zshsource /home/ehoac/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zshexport NVM_DIR=&quot;$([ -z &quot;$&#123;XDG_CONFIG_HOME-&#125;&quot; ] &amp;&amp; printf %s &quot;$&#123;HOME&#125;/.nvm&quot; || printf %s &quot;$&#123;XDG_CONFIG_HOME&#125;/nvm&quot;)&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;bash:$ source ~/.zshrc desktop Dock 最小化 1gsettings set org.gnome.shell.extensions.dash-to-dock click-action &#x27;minimize&#x27; chrome 1https://www.google.cn/intl/zh-CN/chrome/ ssh install 1234sudo apt install openssh-serversudo apt install openssh-clientps -e | grep ssh power tlp 123sudo add-apt-repository ppa:linrunner/tlpsudo apt-get updatesudo apt-get install tlp other 123456789101112131415161)sudo apt-get install indicator-cpufreq2)sudo apt-get install cpufrequtilssudo cpufreq-infocpufreq-set -g &#123;powersave, userspace, ondemand, conservative, performance&#125;sudo cpufreq-set -g performancecpufreq-set -f &#123;600~1500&#125;(设置你的频率，使用cpufreq-info可以查看你的cpu支持哪些)sudo cpufreq-set -c 11 -g powersave 使用服务启动(以 gitea 举例) 添加服务文件 sudo vim /usr/lib/systemd/system/gitea.service 12345678910111213[Unit]Description=Gitea Runit supervision processAfter=multi-user.target[Service]User=usernamePIDFile=pidfile path_ExecStart=/home/ehoac/tools/gitserver/gitea webRestart=alwaysTasksMax=4915[Install]WantedBy=multi-user.target 使服务文件生效 12345systemctl daemon-reloadsystemctl start giteasystemctl stop giteasystemctl status gitea 设置开机启动 1systemctl enable gitea","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://me.ehoac.cn:10443/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://me.ehoac.cn:10443/tags/ubuntu/"}]},{"title":"Linux 工具笔记","slug":"linux-tools","date":"2020-02-19T13:03:32.000Z","updated":"2022-12-07T02:15:44.259Z","comments":true,"path":"2020/02/19/linux-tools/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/19/linux-tools/","excerpt":"ab 简单压力测试 安装命令 1sudo apt install apache2-utils","text":"ab 简单压力测试 安装命令 1sudo apt install apache2-utils 参数说明 参数 说明 -n 总的请求数 -c 并发请求数 -t 最大超时时间 示例 ab -n 100 -c 20 http://27.0.0.1:8080/web 20 个并发请求 100 次测试","categories":[],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://me.ehoac.cn:10443/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"linux","slug":"linux","permalink":"https://me.ehoac.cn:10443/tags/linux/"}]},{"title":"Markdown 语法记录","slug":"markdown-grammar-recording","date":"2020-02-18T13:12:10.000Z","updated":"2023-05-30T02:27:00.671Z","comments":true,"path":"2020/02/18/markdown-grammar-recording/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/18/markdown-grammar-recording/","excerpt":"标题 1234567891011# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题","text":"标题 1234567891011# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 特殊符号 &amp;lt; &lt; &amp;gt; &gt; &amp;amp; &amp; &amp;quot; &quot; &amp;copy; © &amp;nbsp; [ ] &amp;ensp; [ ] &amp;emsp; [ ] &amp;reg; ® &amp;times; × &amp;divide; ÷ &amp;yen; ¥ &amp;plusmn; ± &amp;not; ¬ &amp;laquo; « &amp;raquo; » &amp;middot; · &amp;lowast; ∗ 字体 *斜体* _斜体_ **粗体** ~~删除线~~ `代码块` &lt;/u&gt;下划线&lt;/u&gt; 列表 +,-,*无序列表 1,2,3,...有序列表 链接 [Markdown Grammar Recording](http://127.0.0.1:4000/2020/02/18/Markdown-Grammar-Recording/) Markdown Grammar Recording 图像 ![Pic](https://picsum.photos/id/128/600/400 &quot;picsum picture&quot;) 表格 1234| 表头 1 | 表头 2 || ------ | ------ || 内容 1 | 内容 2 || 内容 3 | 内容 4 | 表头 1 表头 2 内容 1 内容 2 内容 3 内容 4 分隔线 1234--------- 引用 这是一级引用 这是二级引用 3 4 换行 行未加两个空格","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://me.ehoac.cn:10443/tags/markdown/"}]},{"title":"Node 记录","slug":"node-note","date":"2020-02-17T14:57:29.000Z","updated":"2022-12-07T02:15:44.259Z","comments":true,"path":"2020/02/17/node-note/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/17/node-note/","excerpt":"nvm install 123wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bashnvm --version","text":"nvm install 123wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bashnvm --version usage 12345678910nvm ls-remoteNVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/nodenvm install v11.11.0ornvm install stablenvm ls npm 1234567891011npm -vnpm install -g npmnpm config lsornpm config listnpm config set prefix &quot;new_path&quot;npm config set registry &quot;http://registry.npm.taobao.org/&quot;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"node","slug":"node","permalink":"https://me.ehoac.cn:10443/tags/node/"}]},{"title":"vimplus 快捷键","slug":"vimplus-shortcut","date":"2020-02-17T06:27:44.000Z","updated":"2022-12-07T02:15:44.261Z","comments":true,"path":"2020/02/17/vimplus-shortcut/","link":"","permalink":"https://me.ehoac.cn:10443/2020/02/17/vimplus-shortcut/","excerpt":"窗口管理 Leader 操作 快捷键 说明 , Leader Key &lt; leader &gt;n 打开／关闭资源管理器 &lt; leader &gt;t 打开／关闭函数列表 &lt; leader &gt;d 删除当前 buffer &lt; leader &gt;D 删除其他 buffer","text":"窗口管理 Leader 操作 快捷键 说明 , Leader Key &lt; leader &gt;n 打开／关闭资源管理器 &lt; leader &gt;t 打开／关闭函数列表 &lt; leader &gt;d 删除当前 buffer &lt; leader &gt;D 删除其他 buffer 功能键 快捷键 说明 &lt; c-p &gt; 切换到上一个 buffer &lt; c-n &gt; 切换到下一个 buffer &lt; c-w &gt;h 跳转左边的窗口 &lt; c-w &gt;l 跳转右边的窗口 &lt; c-w &gt;j 跳转上边的窗口 &lt; c-w &gt;k 跳转下边的窗口 &lt; c-w &gt;c 关闭当前窗口 &lt; c-w &gt;o 关闭其它窗口 命令模式 快捷键 说明 :e &lt; filename &gt; 新建 buffer 打开文件 :bp 切换到上一个 buffer :bn 切换到下一个 buffer :bd 删除当前 buffer :sp &lt; filename &gt; 横向切分窗口并打开文件 :vsp &lt; filename &gt; 竖向切分窗口并打开文件 :new 打开一个新的窗口编辑新文件 :enew 在当前窗口创建新文件 :vnew 在左右切分的新窗口中编辑新文件 :tabnew 在新的标签页中编辑新文件 光标移动 Leader 操作 快捷键 说明 &lt; leader &gt;w 单词跳转 功能键 快捷键 说明 &lt; c-o &gt; 跳到上一个位置 &lt; c-i &gt; 跳到下一个位置 &lt; c-b &gt; 上一页 &lt; c-f &gt; 下一页 &lt; c-u &gt; 上移半屏 &lt; c-d &gt; 下移半屏 命令模式 快捷键 说明 h 左移动 l 右移动 j 下移动 k 上移动 0 光标移动到行首 ^ 跳到从行首开始第一个非空白字符 $ 光标移动到行尾 H 调到屏幕顶上 M 调到屏幕中间 L 调到屏幕下方 :n 跳到第 n 行 w 跳到下一个单词开头(标点或空格分隔的单词) W 跳到下一个单词开头(空格分隔的单词) e 跳到下一个单词尾部(标点或空格分隔的单词) E 跳到下一个单词尾部(空格分隔的单词) b 上一个单词头(标点或空格分隔的单词) B 上一个单词头(空格分隔的单词) ge 上一个单词尾 % 在配对符间移动, 可用于()、{}、[] gg 到文件首 G 到文件尾 fx 跳转到下一个为 x 的字符 Fx 跳转到上一个为 x 的字符 tx 跳转到下一个为 x 的字符前 Tx 跳转到上一个为 x 的字符前 ; 跳到下一个搜索的结果 [[ 跳转到函数开头 ]] 跳转到函数结尾 文本操作 Leader 操作 快捷键 说明 &lt; leader &gt;l 按竖线对齐 &lt; leader &gt;= 按等号对齐 功能键 快捷键 说明 &lt; c-o &gt; 跳到上一个位置 &lt; c-i &gt; 跳到下一个位置 &lt; c-b &gt; 上一页 &lt; c-f &gt; 下一页 &lt; c-u &gt; 上移半屏 &lt; c-d &gt; 下移半屏 命令模式 快捷键 说明 i 在光标处进入插入模式 I 在行首进入插入模式 a 在光标后进入插入模式 A 在行尾进入插入模式 o 在下一行插入新行并进入插入模式 O 在上一行插入新行并进入插入模式 gi 进入到上一次插入模式的位置 Ya 复制行文本到字母 a Da 剪切行文本到字母 a Ca 改写行文本到字母 a gcc 注释代码 gcap 注释段落 vif 选中函数内容 dif 删除函数内容 cif 改写函数内容 vaf 选中函数内容（包括函数名 花括号） daf 删除函数内容（包括函数名 花括号） caf 改写函数内容（包括函数名 花括号） cc 改写当前行（删除当前行并进入插入模式），同 S cw 改写光标开始处的当前单词 ciw 改写光标所处的单词 caw 改写光标所处的单词，并且包括前后空格（如果有的话） ct, 改写到逗号 c0 改写到行首 c^ 改写到行首（第一个非零字符） c$ 改写到行末 C 改写到行末（同 c$） ci&quot; 改写双引号中的内容 ci’ 改写单引号中的内容 ci) 改写小括号中的内容 ci] 改写中括号中内容 ci} 改写大括号中内容 cit 改写 xml tag 中的内容 cis 改写当前句子 ciB 改写’{}'中的内容 c2w 改写下两个单词 ct( 改写到小括号前 x 删除当前字符，前面可以接数字，3x 代表删除三个字符 X 向前删除字符 dd 删除当前行 d0 删除到行首 d^ 删除到行首（第一个非零字符） d$ 删除到行末 D 删除到行末（同 d$） dw 删除当前单词 dt, 删除到逗号 diw 删除光标所处的单词 daw 删除光标所处的单词，并包含前后空格（如果有的话） di&quot; 删除双引号中的内容 di’ 删除单引号中的内容 di) 删除小括号中的内容 di] 删除中括号中内容 di} 删除大括号中内容 diB 删除’{}'中的内容 dit 删除 xml tag 中的内容 dis 删除当前句子 d2w 删除下两个单词 dt( 删除到小括号前 dgg 删除到文件头部 dG 删除到文件尾部 d} 删除下一段 d{ 删除上一段 u 撤销 U 撤销整行操作 CTRL-R 撤销上一次 u 命令 J 连接若干行 gJ 连接若干行，删除空白字符 . 重复上一次操作 ~ 交换大小写 g~i w 替换当前单词的大小写 gUiw 将单词转成大写 guiw 将当前单词转成小写 guu 全行转为小写 gUU 全行转为大写 gg=G 缩进整个文件 =a{ 缩进光标所在代码块 =i{ 缩进光标所在代码块，不缩进&quot;{&quot; &lt;&lt; 减少缩进 &gt;&gt; 增加缩进 == 自动缩进 CTRL-A 增加数字 CTRL-X 减少数字 p 粘贴到光标后 P 粘贴到光标前 v 开始标记 y 复制标记内容 V 开始按行标记 CTRL-V 开始列标记 y$ 复制当前位置到本行结束的内容 yy 复制当前行 Y 复制当前行，同 yy yt, 复制到逗号 yiw 复制当前单词 3yy 复制光标下三行内容 v0 选中当前位置到行首 v$ 选中当前位置到行末 vt, 选中到逗号 viw 选中当前单词 vi) 选中小括号内的东西 vi] 选中中括号内的东西 viB 选中’{}'中的内容 vis 选中句子中的东西 gv 重新选择上一次选中的文字 :set paste 允许粘贴模式（避免粘贴时自动缩进影响格式） :set nopaste 禁止粘贴模式 &quot;?yy 复制当前行到寄存器 ? ，问号代表 0-9 的寄存器名称 &quot;?p 将寄存器 ? 的内容粘贴到光标后 &quot;?P 将寄存器 ? 的内容粘贴到光标前 :registers 显示所有寄存器内容 :[range]y 复制范围，比如 :20,30y 是复制 20 到 30 行，:10y 是复制第十行 :[range]d 删除范围，比如 :20,30d 是删除 20 到 30 行，:10d 是删除第十行 ddp 交换两行内容：先删除当前行复制到寄存器，并粘贴 搜索替换 Leader 操作 快捷键 说明 f 搜索~目录下的文件 F 搜索当前目录下的文本 r 全局替换，目前只支持单个文件 命令模式 快捷键 说明 fa 查找字母 a，然后再按 f 键查找下一个 rr 替换文本 r 替换当前字符 R 进入替换模式，直至 ESC 离开 s 替换字符（删除光标处字符，并进入插入模式，前可接数量） S 替换行（删除当前行，并进入插入模式，前可接数量） /pattern 从光标处向文件尾搜索 pattern ?pattern 从光标处向文件头搜索 pattern n 向同一方向执行上一次搜索 N 向相反方向执行上一次搜索 * 向前搜索光标下的单词 # 向后搜索光标下的单词 😒/p1/p2/g 替换当前行的 p1 为 p2 :%s/p1/p2/g 替换当前文件中的 p1 为 p2 :%s//p2/g 替换当前文件中的 p1 单词为 p2 :%s/p1/p2/gc 替换当前文件中的 p1 为 p2，并且每处询问你是否替换 :10,20s/p1/p2/g 将第 10 到 20 行中所有 p1 替换为 p2 :%s/1\\2/3/123/g 将“1\\2/3” 替换为 “123”（特殊字符使用反斜杠标注） :%s/\\r//g 删除 DOS 换行符 ^M :g/^\\s*$/d 删除空行 :g/test/d 删除所有包含 test 的行 :v/test/d 删除所有不包含 test 的行 :%s/^/test/ 在行首加入特定字符(也可以用宏录制来添加) :%s/$/test/ 在行尾加入特定字符(也可以用宏录制来添加) :sort 排序 :g/^(.+)$\\n\\1/d 去除重复行(先排序) :%s/^.{10}// 删除每行前 10 个字符 :%s/.{10}$// 删除每行尾 10 个字符 文件操作 命令模式 快捷键 说明 :w 保存文件 :w &lt; filename &gt; 按名称保存文件 ZZ 保存文件（如果有改动的话），并关闭窗口 :e &lt; filename &gt; 打开文件并编辑 :saveas &lt; filename &gt; 另存为文件 :r &lt; filename &gt; 读取文件并将内容插入到光标后 :r !dir 将 dir 命令的输出捕获并插入到光标后 :close 关闭文件 :q 退出 :q! 强制退出 :wa 保存所有文件 :cd &lt; path &gt; 切换 Vim 当前路径 :new 打开一个新的窗口编辑新文件 :enew 在当前窗口创建新文件 :vnew 在左右切分的新窗口中编辑新文件 :tabnew 在新的标签页中编辑新文件 其它 Leader 操作 快捷键 说明 &lt; leader &gt;g 显示 git 仓库提交记录 &lt; leader &gt;G 显示当前文件提交记录 &lt; leader &gt;gg 显示当前文件在某个 commit 下的完整内容 &lt; leader &gt;ff 语法错误自动修复(FixIt) &lt; leader &gt;e 快速编辑 vimrc 文件 &lt; leader &gt;s 重新加载 vimrc 文件 &lt; leader &gt;h 打开 vimplus 帮助文档 &lt; leader &gt;H 打开当前光标所在单词的 vim 帮助文档 &lt; leader &gt;&lt; leader &gt;i 安装插件 &lt; leader &gt;&lt; leader &gt;u 更新插件 &lt; leader &gt;&lt; leader &gt;c 删除插件 功能键 快捷键 说明 &lt; F5 &gt; 显示语法错误提示窗口 &lt; F7 &gt; 启用 mardown 实时预览 &lt; F8 &gt; 关闭 markdown 实时预览 &lt; F9 &gt; 显示上一主题 &lt; F10 &gt; 显示下一主题 命令模式 快捷键 说明 ! 告诉 vim 正在执行一个过滤操作 !5Gsort&lt; Enter &gt; 使用外部 sort 命令对 1-5 行文本排序 !! 对当前行执行过滤命令 !!date&lt; Enter &gt; 用&quot;date&quot;的输出代替当前行 qa 开始录制名字为 a 的宏 q 结束录制宏 @a 播放名字为 a 的宏 100@a 播放名字为 a 的宏 100 次 :normal@a 播放名字为 a 的宏直到自动结束 h tutor 入门文档 h quickref 快速帮助 h index 查询 Vim 所有键盘命令定义 h summary 帮助你更好的使用内置帮助系统 h pattern.txt 正则表达式帮助 h eval 脚本编写帮助 h function-list 查看 VimScript 的函数列表 h windows.txt 窗口使用帮助 h tabpage.txt 标签页使用帮助 h tips 查看 Vim 内置的常用技巧文档 h quote 寄存器 h autocommand-events 所有可能事件 h write-plugin 编写插件 vim -u NONE -N 开启 vim 时不加载 vimrc 文件 vimdiff file1 file2 显示文件差异","categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"vimplus","slug":"vimplus","permalink":"https://me.ehoac.cn:10443/tags/vimplus/"}]}],"categories":[{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://me.ehoac.cn:10443/tags/%E5%B7%A5%E5%85%B7/"},{"name":"IDE","slug":"IDE","permalink":"https://me.ehoac.cn:10443/tags/IDE/"},{"name":"IDEA","slug":"IDEA","permalink":"https://me.ehoac.cn:10443/tags/IDEA/"},{"name":"编程","slug":"编程","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%96%E7%A8%8B/"},{"name":"笔记","slug":"笔记","permalink":"https://me.ehoac.cn:10443/tags/%E7%AC%94%E8%AE%B0/"},{"name":"操作系统","slug":"操作系统","permalink":"https://me.ehoac.cn:10443/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"windows","slug":"windows","permalink":"https://me.ehoac.cn:10443/tags/windows/"},{"name":"html","slug":"html","permalink":"https://me.ehoac.cn:10443/tags/html/"},{"name":"vue","slug":"vue","permalink":"https://me.ehoac.cn:10443/tags/vue/"},{"name":"python","slug":"python","permalink":"https://me.ehoac.cn:10443/tags/python/"},{"name":"版本控制","slug":"版本控制","permalink":"https://me.ehoac.cn:10443/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"},{"name":"git","slug":"git","permalink":"https://me.ehoac.cn:10443/tags/git/"},{"name":"读书笔记","slug":"读书笔记","permalink":"https://me.ehoac.cn:10443/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"股票","slug":"股票","permalink":"https://me.ehoac.cn:10443/tags/%E8%82%A1%E7%A5%A8/"},{"name":"数据库","slug":"数据库","permalink":"https://me.ehoac.cn:10443/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"c 语言","slug":"c-语言","permalink":"https://me.ehoac.cn:10443/tags/c-%E8%AF%AD%E8%A8%80/"},{"name":"oracle","slug":"oracle","permalink":"https://me.ehoac.cn:10443/tags/oracle/"},{"name":"debian","slug":"debian","permalink":"https://me.ehoac.cn:10443/tags/debian/"},{"name":"api","slug":"api","permalink":"https://me.ehoac.cn:10443/tags/api/"},{"name":"restful","slug":"restful","permalink":"https://me.ehoac.cn:10443/tags/restful/"},{"name":"css","slug":"css","permalink":"https://me.ehoac.cn:10443/tags/css/"},{"name":"缓存","slug":"缓存","permalink":"https://me.ehoac.cn:10443/tags/%E7%BC%93%E5%AD%98/"},{"name":"redis","slug":"redis","permalink":"https://me.ehoac.cn:10443/tags/redis/"},{"name":"问题记录","slug":"问题记录","permalink":"https://me.ehoac.cn:10443/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"name":"mysql","slug":"mysql","permalink":"https://me.ehoac.cn:10443/tags/mysql/"},{"name":"maven","slug":"maven","permalink":"https://me.ehoac.cn:10443/tags/maven/"},{"name":"java","slug":"java","permalink":"https://me.ehoac.cn:10443/tags/java/"},{"name":"nginx","slug":"nginx","permalink":"https://me.ehoac.cn:10443/tags/nginx/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://me.ehoac.cn:10443/tags/ubuntu/"},{"name":"linux","slug":"linux","permalink":"https://me.ehoac.cn:10443/tags/linux/"},{"name":"markdown","slug":"markdown","permalink":"https://me.ehoac.cn:10443/tags/markdown/"},{"name":"node","slug":"node","permalink":"https://me.ehoac.cn:10443/tags/node/"},{"name":"vimplus","slug":"vimplus","permalink":"https://me.ehoac.cn:10443/tags/vimplus/"}]}